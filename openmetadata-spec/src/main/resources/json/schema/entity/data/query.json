{
  "$id": "https://open-metadata.org/schema/entity/data/Query.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Query",
  "description": "This schema defines the type to capture any data asset's queries.",
  "type": "object",
  "javaType": "org.openmetadata.schema.entity.data.Query",
  "javaInterfaces": ["org.openmetadata.schema.EntityInterface"],
  "properties": {
    "id": {
      "description": "Unique identifier of the query.",
      "$ref": "../../type/basic.json#/definitions/uuid"
    },
    "name": {
      "description": "Name of an entity to which the query belongs to",
      "$ref": "../../type/basic.json#/definitions/entityName"
    },
    "fullyQualifiedName": {
      "description": "Fully qualified name of a query.",
      "$ref": "../../type/basic.json#/definitions/fullyQualifiedEntityName"
    },
    "displayName": {
      "description": "Display Name that identifies this Query. It could be title or label.",
      "type": "string"
    },
    "description": {
      "description": "Description of a query.",
      "$ref": "../../type/basic.json#/definitions/markdown"
    },
    "version": {
      "description": "Metadata version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/entityVersion"
    },
    "updatedAt": {
      "description": "Last update time corresponding to the new version of the entity in Unix epoch time milliseconds.",
      "$ref": "../../type/basic.json#/definitions/timestamp"
    },
    "updatedBy": {
      "description": "User who made the query.",
      "type": "string"
    },
    "href": {
      "description": "Link to this Query resource.",
      "$ref": "../../type/basic.json#/definitions/href"
    },
    "changeDescription": {
      "description": "Change that lead to this version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/changeDescription"
    },
    "incrementalChangeDescription": {
      "description": "Change that lead to this version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/changeDescription"
    },
    "owners": {
      "description": "Owners of this Query.",
      "$ref": "../../type/entityReferenceList.json",
      "default": null
    },
    "duration": {
      "description": "How long did the query took to run in milliseconds.",
      "type": "number"
    },
    "users": {
      "description": "List of users who ran this query.",
      "type": "array",
      "items": {
        "$ref": "../../type/entityReference.json"
      },
      "default": null
    },
    "followers": {
      "description": "Followers of this Query.",
      "$ref": "../../type/entityReferenceList.json"
    },
    "votes" : {
      "description": "Votes on the entity.",
      "$ref": "../../type/votes.json"
    },
    "query": {
      "description": "SQL Query definition.",
      "$ref": "../../type/basic.json#/definitions/sqlQuery"
    },
    "query_type": {
      "description": "SQL query type",
      "type": "string"
    },
    "exclude_usage": {
      "description": "Flag to check if query is to be excluded while processing usage",
      "type": "boolean"
    },
    "checksum": {
      "description": "Checksum to avoid registering duplicate queries.",
      "type": "string"
    },
    "queryDate": {
      "description": "Date on which the query ran.",
      "$ref": "../../type/basic.json#/definitions/timestamp"
    },
    "usedBy" : {
      "description": "List of users who ran the query but does not exist in OpenMetadata.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true
    },
    "tags": {
      "description": "Tags for this SQL query.",
      "type": "array",
      "items": {
        "$ref": "../../type/tagLabel.json"
      },
      "default": []
    },
    "queryUsedIn": {
      "description": "Entities that are using this query",
      "$ref": "../../type/entityReferenceList.json"
    },
    "triggeredBy": {
      "description": "Entity that triggered the query. E.g., a Stored Procedure or a Pipeline Task.",
      "$ref": "../../type/entityReference.json"
    },
    "processedLineage": {
      "description": "Flag if this query has already been successfully processed for lineage",
      "type": "boolean",
      "default": false
    },
    "service": {
      "description": "Link to the service this query belongs to.",
      "$ref": "../../type/entityReference.json"
    },
    "domains" : {
      "description": "Domains the asset belongs to. When not set, the asset inherits the domain from the parent it belongs to.",
      "$ref": "../../type/entityReferenceList.json"
    }
  },
  "required": ["id", "name", "query", "service"],
  "additionalProperties": false
}
