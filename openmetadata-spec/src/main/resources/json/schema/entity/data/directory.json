{
  "$id": "https://open-metadata.org/schema/entity/data/directory.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Directory",
  "$comment": "@om-entity-type",
  "description": "This schema defines the Directory entity. A Directory is a folder or organizational unit in a Drive Service that can contain files, worksheets, and other directories.",
  "type": "object",
  "javaType": "org.openmetadata.schema.entity.data.Directory",
  "javaInterfaces": [
    "org.openmetadata.schema.EntityInterface"
  ],
  "definitions": {
    "directoryType": {
      "description": "Type of directory",
      "javaInterfaces": ["org.openmetadata.schema.EnumInterface"],
      "type": "string",
      "enum": [
        "Root",
        "MyDrive",
        "SharedDrive",
        "TeamDrive",
        "Folder",
        "SharePointSite",
        "SharePointLibrary"
      ],
      "javaEnums": [
        {"name": "Root"},
        {"name": "MyDrive"},
        {"name": "SharedDrive"},
        {"name": "TeamDrive"},
        {"name": "Folder"},
        {"name": "SharePointSite"},
        {"name": "SharePointLibrary"}
      ]
    }
  },
  "properties": {
    "id": {
      "description": "Unique identifier of this directory instance.",
      "$ref": "../../type/basic.json#/definitions/uuid"
    },
    "name": {
      "description": "Name of the directory.",
      "$ref": "../../type/basic.json#/definitions/entityName"
    },
    "fullyQualifiedName": {
      "description": "Fully qualified name of the directory.",
      "$ref": "../../type/basic.json#/definitions/fullyQualifiedEntityName"
    },
    "displayName": {
      "description": "Display Name that identifies this directory.",
      "type": "string"
    },
    "description": {
      "description": "Description of the directory.",
      "$ref": "../../type/basic.json#/definitions/markdown"
    },
    "service": {
      "description": "Link to the drive service this directory belongs to",
      "$ref": "../../type/entityReference.json"
    },
    "serviceType": {
      "description": "Type of drive service",
      "$ref": "../../entity/services/driveService.json#/definitions/driveServiceType"
    },
    "parent": {
      "description": "Parent directory reference",
      "$ref": "../../type/entityReference.json"
    },
    "children": {
      "description": "Child directories and files",
      "$ref": "../../type/entityReferenceList.json"
    },
    "directoryType": {
      "$ref": "#/definitions/directoryType"
    },
    "path": {
      "description": "Full path to the directory",
      "type": "string"
    },
    "isShared": {
      "description": "Whether this directory is shared",
      "type": "boolean",
      "default": false
    },
    "numberOfFiles": {
      "description": "Number of files in this directory",
      "type": "integer"
    },
    "numberOfSubDirectories": {
      "description": "Number of subdirectories",
      "type": "integer"
    },
    "totalSize": {
      "description": "Total size of all files in bytes",
      "type": "integer"
    },
    "sourceUrl": {
      "description": "Link to this directory in the source system.",
      "$ref": "../../type/basic.json#/definitions/sourceUrl"
    },
    "href": {
      "description": "Link to the resource corresponding to this directory.",
      "$ref": "../../type/basic.json#/definitions/href"
    },
    "owners": {
      "description": "Owners of this directory.",
      "$ref": "../../type/entityReferenceList.json"
    },
    "followers": {
      "description": "Followers of this entity.",
      "$ref": "../../type/entityReferenceList.json"
    },
    "tags": {
      "description": "Tags associated with this directory.",
      "type": "array",
      "items": {
        "$ref": "../../type/tagLabel.json"
      },
      "default": null
    },
    "version": {
      "description": "Metadata version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/entityVersion"
    },
    "updatedAt": {
      "description": "Last update time corresponding to the new version of the entity in Unix epoch time milliseconds.",
      "$ref": "../../type/basic.json#/definitions/timestamp"
    },
    "updatedBy": {
      "description": "User who made the update.",
      "type": "string"
    },
    "changeDescription": {
      "description": "Change that lead to this version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/changeDescription"
    },
    "incrementalChangeDescription": {
      "description": "Change that lead to this version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/changeDescription"
    },
    "deleted": {
      "description": "When `true` indicates the entity has been soft deleted.",
      "type": "boolean",
      "default": false
    },
    "domains" : {
      "description": "Domains the Directory belongs to.",
      "$ref": "../../type/entityReferenceList.json"
    },
    "dataProducts": {
      "description": "List of data products this entity is part of.",
      "$ref": "../../type/entityReferenceList.json"
    },
    "lifeCycle": {
      "description": "Life Cycle of the entity",
      "$ref": "../../type/lifeCycle.json"
    },
    "sourceHash": {
      "description": "Source hash of the entity",
      "type": "string",
      "minLength": 1,
      "maxLength": 32
    },
    "extension": {
      "description": "Entity extension data with custom attributes added to the entity.",
      "$ref": "../../type/basic.json#/definitions/entityExtension"
    },
    "votes": {
      "description": "Votes on the entity.",
      "$ref": "../../type/votes.json"
    },
    "certification": {
      "$ref": "../../type/assetCertification.json"
    },
    "usageSummary": {
      "description": "Latest usage information for this directory.",
      "$ref": "../../type/usageDetails.json",
      "default": null
    }
  },
  "required": ["id", "name", "service"],
  "additionalProperties": false
}