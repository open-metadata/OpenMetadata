{
  "$id": "https://open-metadata.org/schema/entity/applications/marketplace/createAppMarketPlaceDefinitionReq.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CreateAppMarketPlaceDefinitionRequest",
  "javaType": "org.openmetadata.schema.entity.app.CreateAppMarketPlaceDefinitionReq",
  "javaInterfaces": ["org.openmetadata.schema.CreateEntity"],
  "description": "This schema defines the applications for Open-Metadata.",
  "type": "object",
  "properties": {
    "name": {
      "description": "Name of the Application.",
      "$ref": "../../../type/basic.json#/definitions/entityName"
    },
    "displayName": {
      "description": "Display Name for the application.",
      "type": "string"
    },
    "description": {
      "description": "Description of the Application.",
      "$ref": "../../../type/basic.json#/definitions/markdown"
    },
    "features": {
      "description": "Features of the Application.",
      "$ref": "../../../type/basic.json#/definitions/markdown"
    },
    "owners": {
      "description": "Owners of this workflow.",
      "$ref": "../../../type/entityReferenceList.json",
      "default": null
    },
    "tags": {
      "description": "Tags associated with the entity.",
      "type": "array",
      "items": {
        "$ref": "../../../type/tagLabel.json"
      },
      "default": null
    },
    "developer": {
      "description": "Developer For the Application.",
      "type": "string"
    },
    "developerUrl": {
      "description": "Url for the developer",
      "type": "string"
    },
    "privacyPolicyUrl": {
      "description": "Privacy Policy for the developer",
      "type": "string"
    },
    "supportEmail": {
      "description": "Support Email for the application",
      "type": "string"
    },
    "className": {
      "description": "Full Qualified ClassName for the the application. Use can use 'org.openmetadata.service.apps.AbstractNativeApplication' if you don't have one yet.",
      "type": "string"
    },
    "sourcePythonClass": {
      "description": "Fully Qualified class name for the Python source that will execute the external application.",
      "type": "string"
    },
    "appType": {
      "description": "This schema defines the type of application.",
      "$ref": "../app.json#/definitions/appType"
    },
    "agentType": {
      "description": "This schema defines the type of the agent.",
      "$ref": "../app.json#/definitions/agentType"
    },
    "scheduleType": {
      "description": "This schema defines the Schedule Type of Application.",
      "$ref": "../app.json#/definitions/scheduleType"
    },
    "permission": {
      "description": "Permission used by Native Applications.",
      "$ref": "../app.json#/definitions/permissions"
    },
    "runtime": {
      "description": "If app type is live, user can provide additional runtime context.",
      "$ref": "../app.json#/definitions/executionContext"
    },
    "allowConfiguration": {
      "description": "Allow users to configure the app from the UI. If `false`, the `configure` step will be hidden.",
      "type": "boolean",
      "default": true
    },
    "appConfiguration": {
      "description": "Application Configuration object.",
      "$ref": "../configuration/applicationConfig.json#/definitions/appConfig"
    },
    "appLogoUrl": {
      "description": "Application Logo Url.",
      "type": "string",
      "format": "uri"
    },
    "appScreenshots": {
      "description": "Application Screenshots.",
      "type": "array",
      "items":{
        "type": "string"
      },
      "uniqueItems": true
    },
    "system": {
      "description": "A system app cannot be uninstalled or modified.",
      "type": "boolean",
      "default": false
    },
    "domains" : {
      "description": "Fully qualified names of the domains the Application belongs to.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "supportsInterrupt": {
      "description": "If the app run can be interrupted as part of the execution.",
      "type": "boolean",
      "default": false
    },
    "eventSubscriptions": {
      "description": "Event subscriptions that will be created when the application is installed.",
      "type": "array",
      "default": [],
      "items": {
        "$ref": "../../../events/api/createEventSubscription.json"
      }
    },
    "enabled": {
      "description": "The app will be installable only if this flag is set to true.",
      "type": "boolean",
      "default": true
    }
  },
  "additionalProperties": false,
  "required": ["name", "appType", "className", "scheduleType", "permission"]
}
