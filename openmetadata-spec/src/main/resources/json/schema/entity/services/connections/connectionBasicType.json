{
  "$id": "https://open-metadata.org/schema/entity/services/connections/connectionBasicType.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ConnectionType",
  "description": "This schema defines basic common types that are used by other schemas.",
  "definitions": {
    "connectionOptions": {
      "javaType": "org.openmetadata.schema.services.connections.database.ConnectionOptions",
      "description": "Additional connection options to build the URL that can be sent to service during the connection.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "connectionArguments": {
      "javaType": "org.openmetadata.schema.services.connections.database.ConnectionArguments",
      "description": "Additional connection arguments such as security or protocol configs that can be sent to service during connection.",
      "type": "object",
      "additionalProperties": {
        ".{1,}": { "type": "string" }
      }
    },
    "supportsMetadataExtraction": {
      "description": "Supports Metadata Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsIncrementalMetadataExtraction": {
      "description": "Supports Incremental Metadata Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsUsageExtraction": {
      "description": "Supports Usage Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsLineageExtraction": {
      "description": "Supports Lineage Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsViewLineageExtraction": {
      "description": "Supports View Lineage Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsProfiler": {
      "description": "Supports Profiler",
      "type": "boolean",
      "default": true
    }, 
    "supportsStatistics": {
      "description": "Supports collecting metrics from an aggregated statistics table",
      "type": "boolean",
      "default": false
    },
    "supportsDatabase": {
      "description": "The source service supports the database concept in its hierarchy",
      "type": "boolean",
      "default": true
    },
    "supportsQueryComment": {
      "description": "For Database Services using SQLAlchemy, True to enable running a comment for all queries run from OpenMetadata.",
      "type": "boolean",
      "default": true
    },
    "supportsSystemProfile": {
      "description": "The source database supports system profiles for tables such as last update.",
      "type": "boolean",
      "default": false
    },
    "supportsDataInsightExtraction": {
      "description": "Support Metadata To Elastic Search",
      "type": "boolean",
      "default": true
    },
    "supportsElasticSearchReindexingExtraction": {
      "description": "Support Elastic Search Reindexing",
      "type": "boolean",
      "default": true
    },
    "supportsDBTExtraction": {
      "description": "Supports DBT Extraction.",
      "type": "boolean",
      "default": true
    }, 
    "supportsDataDiff": {
      "description": "Supports the data diff data qualty specification.",
      "type": "boolean",
      "default": true
    },
    "dataStorageConfig": {
      "description": "Storage config to store sample data",
      "type": "object",
      "properties": {
        "bucketName": {
          "title": "Bucket Name",
          "description": "Bucket Name",
          "type": "string",
          "default": ""
        },
        "prefix": {
          "title": "Prefix",
          "description": "Prefix of the data source.",
          "type": "string",
          "default": ""
        },
        "filePathPattern": {
          "title": "File Path Pattern",
          "description": "Provide the pattern of the path where the generated sample data file needs to be stored.",
          "type": "string",
          "default": "{service_name}/{database_name}/{database_schema_name}/{table_name}/sample_data.parquet"
        },
        "overwriteData": {
          "title": "Overwrite Sample Data",
          "description": "When this field enabled a single parquet file will be created to store sample data, otherwise we will create a new file per day",
          "type": "boolean",
          "default": true
        },
        "storageConfig": {
          "oneOf": [
            {
              "title": "AWS S3 Storage Config",
              "$ref": "../../../security/credentials/awsCredentials.json"
            },
            {
              "title": "OpenMetadata Storage",
              "type": "object",
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "sampleDataStorageConfig": {
      "description": "Storage config to store sample data",
      "type": "object",
      "javaType": "org.openmetadata.schema.services.connections.database.SampleDataStorageConfig",
      "properties": {
        "config": {
          "oneOf": [
            {
              "title": "Sample Data Storage Config",
              "$ref": "#/definitions/dataStorageConfig"
            },
            {
              "title": "No Sample Data Storage Config",
              "type": "object",
              "additionalProperties": false
            }
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
