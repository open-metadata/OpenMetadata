{
  "$id": "https://open-metadata.org/schema/entity/services/connections/database/athenaConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AthenaConnection",
  "description": "AWS Athena Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.schema.services.connections.database.AthenaConnection",
  "definitions": {
    "athenaType": {
      "description": "Service type.",
      "type": "string",
      "enum": ["Athena"],
      "default": "Athena"
    },
    "athenaScheme": {
      "description": "SQLAlchemy driver scheme options.",
      "type": "string",
      "enum": ["awsathena+rest"],
      "default": "awsathena+rest"
    }
  },
  "properties": {
    "type": {
      "title": "Service Type",
      "description": "Service Type",
      "$ref": "#/definitions/athenaType",
      "default": "Athena"
    },
    "scheme": {
      "title": "Connection Scheme",
      "description": "SQLAlchemy driver scheme options.",
      "$ref": "#/definitions/athenaScheme",
      "default": "awsathena+rest"
    },
    
    "awsConfig": {
      "title": "AWS Credentials Configuration",
      "$ref": "../../../../security/credentials/awsCredentials.json"
    },
    "s3StagingDir": {
      "title": "S3 Staging Directory",
      "description": "S3 Staging Directory. Example: s3://postgres/input/",
      "type": "string",
      "format": "uri"
    },
    "workgroup": {
      "title": "Athena Workgroup",
      "description": "Athena workgroup.",
      "type": "string"
    },
    "databaseName": {
      "title": "Database Name",
      "description": "Optional name to give to the database in OpenMetadata. If left blank, we will use default as the database name.",
      "type": "string"
    },
    "connectionOptions": {
      "title": "Connection Options",
      "$ref": "../connectionBasicType.json#/definitions/connectionOptions"
    },
    "connectionArguments": {
      "title": "Connection Arguments",
      "$ref": "../connectionBasicType.json#/definitions/connectionArguments"
    },
    "schemaFilterPattern":{
      "title": "Default Schema Filter Pattern",
      "description": "Regex to only include/exclude schemas that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "tableFilterPattern": {
      "title": "Default Table Filter Pattern",
      "description": "Regex to only include/exclude tables that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "databaseFilterPattern": {
      "title": "Default Database Filter Pattern",
      "description": "Regex to only include/exclude databases that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "supportsMetadataExtraction": {
      "title": "Supports Metadata Extraction",
      "$ref": "../connectionBasicType.json#/definitions/supportsMetadataExtraction"
    },
    "supportsDBTExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsDBTExtraction"
    },
    "supportsProfiler": {
      "title": "Supports Profiler",
      "$ref": "../connectionBasicType.json#/definitions/supportsProfiler"
    },
    "supportsQueryComment": {
      "title": "Supports Query Comment",
      "$ref": "../connectionBasicType.json#/definitions/supportsQueryComment"
    },
    "supportsUsageExtraction": {
      "description": "Supports Usage Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsLineageExtraction": {
      "description": "Supports Lineage Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsDataDiff": {
        "title": "Supports Data Diff Extraction.",
        "$ref": "../connectionBasicType.json#/definitions/supportsDataDiff"
    },
    "sampleDataStorageConfig": {
      "title": "Storage Config for Sample Data",
      "$ref": "../connectionBasicType.json#/definitions/sampleDataStorageConfig"
    }
  },
  "additionalProperties": false,
  "required": ["s3StagingDir", "awsConfig", "workgroup"]
}
