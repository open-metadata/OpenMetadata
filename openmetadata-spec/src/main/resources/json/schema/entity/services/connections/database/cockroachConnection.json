{
    "$id": "https://open-metadata.org/schema/entity/services/connections/database/cockroachConnection.json",
        "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "CockroachConnection",
    "description": "Cockroach Database Connection Config",
        "type": "object",
    "javaType": "org.openmetadata.schema.services.connections.database.CockroachConnection",
    "definitions": {
        "cockroachType": {
            "description": "Service type.",
            "type": "string",
            "enum": ["Cockroach"],
            "default": "Cockroach"
            },
        "cockroachScheme": {
            "description": "SQLAlchemy driver scheme options.",
            "type": "string",
            "enum": ["cockroachdb+psycopg2"],
            "default": "cockroachdb+psycopg2"
            }
    },
    "properties": {
    "type": {
      "title": "Service Type",
      "description": "Service Type",
      "$ref": "#/definitions/cockroachType",
      "default": "Cockroach"
    },
    "scheme": {
      "title": "Connection Scheme",
      "description": "SQLAlchemy driver scheme options.",
      "$ref": "#/definitions/cockroachScheme",
      "default": "cockroachdb+psycopg2"
    },
    "username": {
      "title": "Username",
      "description": "Username to connect to Cockroach. This user should have privileges to read all the metadata in Cockroach.",
      "type": "string"
    },
    "authType": {
      "title": "Auth Configuration Type",
      "description": "Choose Auth Config Type.",
      "oneOf": [
        {
          "$ref": "./common/basicAuth.json"
        }
      ]
    },
    "hostPort": {
      "title": "Host and Port",
      "description": "Host and port of the Cockrooach service.",
      "type": "string"
    },
    "database": {
      "title": "Database Name",
      "description": "Optional name to give to the database in OpenMetadata. If left blank, we will use default as the database name.",
      "type": "string"
    },
    "ingestAllDatabases": {
      "title": "Ingest All Databases",
      "description": "Ingest data from all databases in Postgres. You can use databaseFilterPattern on top of this.",
      "type": "boolean",
      "default": false
    },
    "databaseSchema": {
      "title": "Database Schema",
      "description": "Database Schema of the data source. This is optional parameter, if you would like to restrict the metadata reading to a single schema. When left blank, OpenMetadata Ingestion attempts to scan all the schemas.",
      "type": "string"
    },
    "sslConfig": {
      "title": "SSL",
      "description": "SSL Configuration details.",
      "$ref": "../../../../security/ssl/verifySSLConfig.json#/definitions/sslConfig"
    },
    "sslMode": {
      "$ref": "../../../../security/ssl/verifySSLConfig.json#/definitions/sslMode"
    },
    "connectionOptions": {
      "title": "Connection Options",
      "$ref": "../connectionBasicType.json#/definitions/connectionOptions"
    },
    "connectionArguments": {
      "title": "Connection Arguments",
      "$ref": "../connectionBasicType.json#/definitions/connectionArguments"
    },
    "schemaFilterPattern":{
      "title": "Default Schema Filter Pattern",
      "description": "Regex to only include/exclude schemas that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "tableFilterPattern": {
      "title": "Default Table Filter Pattern",
      "description": "Regex to only include/exclude tables that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "databaseFilterPattern": {
      "title": "Default Database Filter Pattern",
      "description": "Regex to only include/exclude databases that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "supportsMetadataExtraction": {
      "title": "Supports Metadata Extraction",
      "$ref": "../connectionBasicType.json#/definitions/supportsMetadataExtraction"
    },
    "supportsProfiler": {
      "title": "Supports Profiler",
      "$ref": "../connectionBasicType.json#/definitions/supportsProfiler"
    }
  },
  "additionalProperties": false,
    "required": ["hostPort", "username", "database"]
}
