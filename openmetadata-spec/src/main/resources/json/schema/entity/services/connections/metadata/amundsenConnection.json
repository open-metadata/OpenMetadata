{
  "$id": "https://open-metadata.org/schema/entity/services/connections/metadata/amundsenConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AmundsenConnection",
  "description": "Amundsen Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.schema.services.connections.metadata.AmundsenConnection",
  "definitions": {
    "amundsenType": {
      "description": "Amundsen service type",
      "type": "string",
      "enum": ["Amundsen"],
      "default": "Amundsen"
    }
  },
  "properties": {
    "type": {
      "description": "Service Type",
      "$ref": "#/definitions/amundsenType",
      "default": "Amundsen"
    },
    "username": {
      "description": "username to connect to the Amundsen Neo4j Connection.",
      "type": "string"
    },
    "password": {
      "description": "password to connect to the Amundsen Neo4j Connection.",
      "type": "string",
      "format": "password"
    },
    "hostPort": {
      "expose": true,
      "title": "Host and Port",
      "description": "Host and port of the Amundsen Neo4j Connection. This expect a URI format like: bolt://localhost:7687.",
      "type": "string",
      "format": "uri"
    },
    "maxConnectionLifeTime": {
      "description": "Maximum connection lifetime for the Amundsen Neo4j Connection.",
      "type": "integer",
      "default": 50
    },
    "validateSSL": {
      "description": "Enable SSL validation for the Amundsen Neo4j Connection.",
      "type": "boolean",
      "default": false
    },
    "encrypted": {
      "description": "Enable encryption for the Amundsen Neo4j Connection.",
      "type": "boolean",
      "default": false
    },
    "schemaFilterPattern":{
      "title": "Default Schema Filter Pattern",
      "description": "Regex to only include/exclude schemas that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "tableFilterPattern": {
      "title": "Default Table Filter Pattern",
      "description": "Regex to only include/exclude tables that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "databaseFilterPattern": {
      "title": "Default Database Filter Pattern",
      "description": "Regex to only include/exclude databases that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "supportsMetadataExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsMetadataExtraction"
    }
  },
  "required": ["username", "password", "hostPort"],
  "additionalProperties": false
}
