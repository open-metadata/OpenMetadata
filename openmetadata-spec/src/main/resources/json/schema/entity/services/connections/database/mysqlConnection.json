{
  "$id": "https://open-metadata.org/schema/entity/services/connections/database/mysqlConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "MysqlConnection",
  "description": "Mysql Database Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.schema.services.connections.database.MysqlConnection",
  "definitions": {
    "mySQLType": {
      "description": "Service type.",
      "type": "string",
      "enum": [
        "Mysql"
      ],
      "default": "Mysql"
    },
    "mySQLScheme": {
      "description": "SQLAlchemy driver scheme options.",
      "type": "string",
      "enum": [
        "mysql+pymysql"
      ],
      "default": "mysql+pymysql"
    }
  },
  "properties": {
    "type": {
      "title": "Service Type",
      "description": "Service Type",
      "$ref": "#/definitions/mySQLType",
      "default": "Mysql"
    },
    "scheme": {
      "title": "Connection Scheme",
      "description": "SQLAlchemy driver scheme options.",
      "$ref": "#/definitions/mySQLScheme",
      "default": "mysql+pymysql"
    },
    "username": {
      "title": "Username",
      "description": "Username to connect to MySQL. This user should have privileges to read all the metadata in Mysql.",
      "type": "string"
    },
    "authType": {
      "title": "Auth Configuration Type",
      "description": "Choose Auth Config Type.",
      "mask":  true,
      "oneOf": [
        {
          "$ref": "./common/basicAuth.json"
        },
        {
          "$ref": "./common/iamAuthConfig.json"
        },
        {
          "$ref": "./common/azureConfig.json"
        }
      ]
    },
    "hostPort": {
      "title": "Host and Port",
      "description": "Host and port of the MySQL service.",
      "type": "string"
    },
    "databaseName": {
      "title": "Database Name",
      "description": "Optional name to give to the database in OpenMetadata. If left blank, we will use default as the database name.",
      "type": "string"
    },
    "databaseSchema": {
      "title": "Database Schema",
      "description": "Database Schema of the data source. This is optional parameter, if you would like to restrict the metadata reading to a single schema. When left blank, OpenMetadata Ingestion attempts to scan all the schemas.",
      "type": "string"
    },
    "sslConfig": {
      "title": "SSL",
      "description": "SSL Configuration details.",
      "$ref": "../../../../security/ssl/verifySSLConfig.json#/definitions/sslConfig"
    },
    "connectionOptions": {
      "title": "Connection Options",
      "$ref": "../connectionBasicType.json#/definitions/connectionOptions"
    },
    "connectionArguments": {
      "title": "Connection Arguments",
      "$ref": "../connectionBasicType.json#/definitions/connectionArguments"
    },
    "schemaFilterPattern":{
      "title": "Default Schema Filter Pattern",
      "description": "Regex to only include/exclude schemas that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern",
      "default": {
        "includes": [],
        "excludes": ["^information_schema$", "^performance_schema$"]
      }
    },
    "tableFilterPattern": {
      "title": "Default Table Filter Pattern",
      "description": "Regex to only include/exclude tables that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "databaseFilterPattern": {
      "title": "Default Database Filter Pattern",
      "description": "Regex to only include/exclude databases that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "supportsMetadataExtraction": {
      "title": "Supports Metadata Extraction",
      "$ref": "../connectionBasicType.json#/definitions/supportsMetadataExtraction"
    },
    "supportsDBTExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsDBTExtraction"
    },
    "supportsProfiler": {
      "title": "Supports Profiler",
      "$ref": "../connectionBasicType.json#/definitions/supportsProfiler"
    },
    "supportsQueryComment": {
      "title": "Supports Query Comment",
      "$ref": "../connectionBasicType.json#/definitions/supportsQueryComment"
    },
    "sampleDataStorageConfig": {
      "title": "Storage Config for Sample Data",
      "$ref": "../connectionBasicType.json#/definitions/sampleDataStorageConfig"
    },
    "supportsDataDiff": {
        "title": "Supports Data Diff Extraction.",
        "$ref": "../connectionBasicType.json#/definitions/supportsDataDiff"
    },
    "supportsUsageExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsUsageExtraction"
    },
    "supportsLineageExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsLineageExtraction"
    },
    "useSlowLogs": {
      "title": "Use Slow Logs for Lineage",
      "description": "Use slow logs to extract lineage.",
      "type": "boolean",
      "default": false
    }
  },
  "additionalProperties": false,
  "required": [
    "hostPort",
    "username"
  ]
}