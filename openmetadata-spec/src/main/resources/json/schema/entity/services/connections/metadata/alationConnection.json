{
  "$id": "https://open-metadata.org/schema/entity/services/connections/metadata/AlationConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AlationConnection",
  "description": "Alation Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.schema.services.connections.metadata.AlationConnection",
  "definitions": {
    "alationType": {
      "description": "Service type.",
      "type": "string",
      "enum": ["Alation"],
      "default": "Alation"
    }
  },
  "properties": {
    "type": {
      "description": "Service Type",
      "$ref": "#/definitions/alationType",
      "default": "Alation"
    },
    "hostPort": {
      "description": "Host and port of the Alation service.",
      "title": "Host and Port",
      "type": "string",
      "format": "uri",
      "expose": true
    },
    "authType": {
      "mask": true,
      "title": "Authentication type for Alation",
      "description": "Types of methods used to authenticate to the alation instance",
      "oneOf": [
        {
          "$ref": "../../../../security/credentials/basicAuth.json"
        },
        {
          "$ref": "../../../../security/credentials/apiAccessTokenAuth.json"
        }
      ]
    },
    "connection":{
      "title": "Alation Database Connection",
      "description": "Choose between mysql and postgres connection for alation database",
      "oneOf": [
        {
          "$ref": "../database/postgresConnection.json"
        },
        {
          "$ref": "../database/mysqlConnection.json"
        },
        {
          "title": "None",
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "projectName": {
      "title": "Project Name",
      "description": "Project name to create the refreshToken. Can be anything",
      "type": "string",
      "default": "AlationAPI"
    },
    "paginationLimit": {
      "title": "Pagination Limit",
      "description": "Pagination limit used for Alation APIs pagination",
      "type": "integer",
      "default": 10
    },
    "includeUndeployedDatasources": {
      "title": "Include Undeployed Datasources",
      "description": "Specifies if undeployed datasources should be included while ingesting.",
      "type": "boolean",
      "default": false
    },
    "includeHiddenDatasources": {
      "title": "Include Hidden Datasources",
      "description": "Specifies if hidden datasources should be included while ingesting.",
      "type": "boolean",
      "default": false
    },
    "ingestDatasources": {
      "title": "Ingest Datasources",
      "description": "Specifies if Datasources are to be ingested while running the ingestion job.",
      "type": "boolean",
      "default": true
    },
    "ingestUsersAndGroups": {
      "title": "Ingest Users and Groups",
      "description": "Specifies if Users and Groups are to be ingested while running the ingestion job.",
      "type": "boolean",
      "default": true
    },
    "ingestDomains": {
      "title": "Ingest Domains",
      "description": "Specifies if Domains are to be ingested while running the ingestion job.",
      "type": "boolean",
      "default": true
    },
    "ingestKnowledgeArticles": {
      "title": "Ingest Knowledge Articles",
      "description": "Specifies if Knowledge Articles are to be ingested while running the ingestion job.",
      "type": "boolean",
      "default": true
    },
    "ingestDashboards": {
      "title": "Ingest Dashboards",
      "description": "Specifies if Dashboards are to be ingested while running the ingestion job.",
      "type": "boolean",
      "default": true
    },
    "alationTagClassificationName": {
      "title": "Alation Tags Classification Name",
      "description": "Custom OpenMetadata Classification name for alation tags.",
      "type": "string",
      "default": "alationTags"
    },
    "connectionOptions": {
      "$ref": "../connectionBasicType.json#/definitions/connectionOptions"
    },
    "connectionArguments": {
      "$ref": "../connectionBasicType.json#/definitions/connectionArguments"
    },
    "schemaFilterPattern":{
      "title": "Default Schema Filter Pattern",
      "description": "Regex to only include/exclude schemas that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "tableFilterPattern": {
      "title": "Default Table Filter Pattern",
      "description": "Regex to only include/exclude tables that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "databaseFilterPattern": {
      "title": "Default Database Filter Pattern",
      "description": "Regex to only include/exclude databases that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "supportsMetadataExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsMetadataExtraction"
    }
  },
  "required": ["hostPort", "authType"],
  "additionalProperties": false
}
