{
  "$id": "https://open-metadata.org/schema/entity/services/connections/database/azureSQLConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AzureSQLConnection",
  "description": "Azure SQL Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.schema.services.connections.database.AzureSQLConnection",
  "definitions": {
    "azureSQLType": {
      "description": "Service type.",
      "type": "string",
      "enum": [
        "AzureSQL"
      ],
      "default": "AzureSQL"
    },
    "azureSQLScheme": {
      "description": "SQLAlchemy driver scheme options.",
      "type": "string",
      "enum": [
        "mssql+pyodbc"
      ],
      "default": "mssql+pyodbc"
    }
  },
  "properties": {
    "type": {
      "title": "Service Type",
      "description": "Service Type",
      "$ref": "#/definitions/azureSQLType",
      "default": "AzureSQL"
    },
    "scheme": {
      "title": "Connection Scheme",
      "description": "SQLAlchemy driver scheme options.",
      "$ref": "#/definitions/azureSQLScheme",
      "default": "mssql+pyodbc"
    },
    "username": {
      "title": "Username",
      "description": "Username to connect to AzureSQL. This user should have privileges to read the metadata.",
      "type": "string"
    },
    "password": {
      "title": "Password",
      "description": "Password to connect to AzureSQL.",
      "type": "string",
      "format": "password"
    },
    "hostPort": {
      "title": "Host and Port",
      "description": "Host and port of the AzureSQL service.",
      "type": "string"
    },
    "database": {
      "title": "Database",
      "description": "Database of the data source. This is optional parameter, if you would like to restrict the metadata reading to a single database. When left blank, OpenMetadata Ingestion attempts to scan all the databases.",
      "type": "string"
    },
    "driver": {
      "title": "Driver",
      "description": "SQLAlchemy driver for AzureSQL.",
      "type": "string",
      "default": "ODBC Driver 18 for SQL Server"
    },
    "authenticationMode": {
      "title": "Authentication Mode",
      "description": "This parameter determines the mode of authentication for connecting to AzureSQL using ODBC. If 'Active Directory Password' is selected, you need to provide the password. If 'Active Directory Integrated' is selected, password is not required as it uses the logged-in user's credentials. This mode is useful for establishing secure and seamless connections with AzureSQL.",
      "properties": {
        "authentication": {
          "title": "Authentication",
          "description": "Authentication from Connection String for AzureSQL.",
          "type": "string",
          "enum": [
            "ActiveDirectoryIntegrated",
            "ActiveDirectoryPassword"
          ]
        },
        "encrypt": {
          "title": "Encrypt",
          "description": "Encrypt from Connection String for AzureSQL.",
          "type": "boolean"
        },
        "trustServerCertificate": {
          "title": "Trust Server Certificate",
          "description": "Trust Server Certificate from Connection String for AzureSQL.",
          "type": "boolean"
        },
        "connectionTimeout": {
          "title": "Connection Timeout",
          "description": "Connection Timeout from Connection String for AzureSQL.",
          "type": "integer",
          "default": 30
        }
      }
    },
    "ingestAllDatabases": {
      "title": "Ingest All Databases",
      "description": "Ingest data from all databases in Azuresql. You can use databaseFilterPattern on top of this.",
      "type": "boolean",
      "default": false
    },
    "connectionOptions": {
      "title": "Connection Options",
      "$ref": "../connectionBasicType.json#/definitions/connectionOptions"
    },
    "connectionArguments": {
      "title": "Connection Arguments",
      "$ref": "../connectionBasicType.json#/definitions/connectionArguments"
    },
    "schemaFilterPattern":{
      "title": "Default Schema Filter Pattern",
      "description": "Regex to only include/exclude schemas that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "tableFilterPattern": {
      "title": "Default Table Filter Pattern",
      "description": "Regex to only include/exclude tables that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "databaseFilterPattern": {
      "title": "Default Database Filter Pattern",
      "description": "Regex to only include/exclude databases that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "supportsMetadataExtraction": {
      "title": "Supports Metadata Extraction",
      "$ref": "../connectionBasicType.json#/definitions/supportsMetadataExtraction"
    },
    "supportsUsageExtraction": {
      "title": "Supports Usage Extraction",
      "$ref": "../connectionBasicType.json#/definitions/supportsUsageExtraction"
    },
    "supportsLineageExtraction": {
      "title": "Supports Lineage Extraction",
      "$ref": "../connectionBasicType.json#/definitions/supportsLineageExtraction"
    },
    "supportsDBTExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsDBTExtraction"
    },
    "supportsProfiler": {
      "title": "Supports Profiler",
      "$ref": "../connectionBasicType.json#/definitions/supportsProfiler"
    },
    "supportsDatabase": {
      "title": "Supports Database",
      "$ref": "../connectionBasicType.json#/definitions/supportsDatabase"
    },
    "sampleDataStorageConfig": {
      "title": "Storage Config for Sample Data",
      "$ref": "../connectionBasicType.json#/definitions/sampleDataStorageConfig"
    }
  },
  "additionalProperties": false,
  "required": [
    "hostPort",
    "database",
    "username"
  ]
}