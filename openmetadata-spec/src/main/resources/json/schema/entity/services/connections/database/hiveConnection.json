{
  "$id": "https://open-metadata.org/schema/entity/services/connections/database/hiveConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HiveConnection",
  "description": "Hive SQL Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.schema.services.connections.database.HiveConnection",
  "definitions": {
    "hiveType": {
      "description": "Service type.",
      "type": "string",
      "enum": ["Hive"],
      "default": "Hive"
    },
    "hiveScheme": {
      "description": "SQLAlchemy driver scheme options.",
      "type": "string",
      "enum": ["hive", "hive+http", "hive+https"],
      "default": "hive"
    }
  },
  "properties": {
    "type": {
      "title": "Service Type",
      "description": "Service Type",
      "$ref": "#/definitions/hiveType",
      "default": "Hive"
    },
    "scheme": {
      "title": "Connection Scheme",
      "description": "SQLAlchemy driver scheme options.",
      "$ref": "#/definitions/hiveScheme",
      "default": "hive"
    },
    "username": {
      "title": "Username",
      "description": "Username to connect to Hive. This user should have privileges to read all the metadata in Hive.",
      "type": "string"
    },
    "password": {
      "title": "Password",
      "description": "Password to connect to Hive.",
      "type": "string",
      "format": "password"
    },
    "hostPort": {
      "title": "Host and Port",
      "description": "Host and port of the Hive service.",
      "type": "string"
    },
    "auth": {
      "title": "Authentication Mode",
      "description": "Authentication mode to connect to hive.",
      "type": "string",
      "enum": ["NONE", "LDAP", "KERBEROS", "CUSTOM", "NOSASL", "BASIC", "GSSAPI", "JWT", "PLAIN"],
      "default": "NONE"
    },
    "kerberosServiceName": {
      "title": "Kerberos Service Name",
      "description": "If authenticating with Kerberos specify the Kerberos service name",
      "type": "string"
    },
    "databaseSchema": {
      "title": "Database Schema",
      "description": "Database Schema of the data source. This is optional parameter, if you would like to restrict the metadata reading to a single schema. When left blank, OpenMetadata Ingestion attempts to scan all the schemas.",
      "type": "string"
    },
    "databaseName": {
      "title": "Database Name",
      "description": "Optional name to give to the database in OpenMetadata. If left blank, we will use default as the database name.",
      "type": "string"
    },
    "authOptions": {
      "title": "URL Authentication Options",
      "description": "Authentication options to pass to Hive connector. These options are based on SQLAlchemy.",
      "type": "string"
    },
    "metastoreConnection":{
      "title": "Hive Metastore Connection Details",
      "description": "Hive Metastore Connection Details",
      "oneOf": [
        {
          "$ref": "./postgresConnection.json"
        },
        {
          "$ref": "./mysqlConnection.json"
        },
        {
          "title": "None",
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "connectionOptions": {
      "title": "Connection Options",
      "$ref": "../connectionBasicType.json#/definitions/connectionOptions"
    },
    "connectionArguments": {
      "title": "Connection Arguments",
      "$ref": "../connectionBasicType.json#/definitions/connectionArguments"
    },
    "schemaFilterPattern":{
      "title": "Default Schema Filter Pattern",
      "description": "Regex to only include/exclude schemas that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "tableFilterPattern": {
      "title": "Default Table Filter Pattern",
      "description": "Regex to only include/exclude tables that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "databaseFilterPattern": {
      "title": "Default Database Filter Pattern",
      "description": "Regex to only include/exclude databases that matches the pattern.",
      "$ref": "../../../../type/filterPattern.json#/definitions/filterPattern"
    },
    "supportsMetadataExtraction": {
      "title": "Supports Metadata Extraction",
      "$ref": "../connectionBasicType.json#/definitions/supportsMetadataExtraction"
    },
    "supportsDBTExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsDBTExtraction"
    },
    "supportsProfiler": {
      "title": "Supports Profiler",
      "$ref": "../connectionBasicType.json#/definitions/supportsProfiler"
    },
    "sampleDataStorageConfig": {
      "title": "Storage Config for Sample Data",
      "$ref": "../connectionBasicType.json#/definitions/sampleDataStorageConfig"
    },
    "supportsViewLineageExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsViewLineageExtraction"
    }
  },
  "additionalProperties": false,
  "required": ["hostPort"]
}