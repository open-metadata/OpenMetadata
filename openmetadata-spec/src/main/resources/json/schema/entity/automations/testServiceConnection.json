{
  "$id": "https://open-metadata.org/schema/entity/automations/workflow/testServiceConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "TestServiceConnectionRequest",
  "javaType": "org.openmetadata.schema.entity.automations.TestServiceConnectionRequest",
  "description": "Test Service Connection to test user provided configuration is valid or not.",
  "type": "object",
  "properties": {
    "connection": {
      "description": "Connection object.",
      "oneOf": [
        {
          "$ref": "../services/apiService.json#/definitions/apiConnection"
        },
        {
          "$ref": "../services/databaseService.json#/definitions/databaseConnection"
        },
        {
          "$ref": "../services/dashboardService.json#/definitions/dashboardConnection"
        },
        {
          "$ref": "../services/messagingService.json#/definitions/messagingConnection"
        },
        {
          "$ref": "../services/pipelineService.json#/definitions/pipelineConnection"
        },
        {
          "$ref": "../services/mlmodelService.json#/definitions/mlModelConnection"
        },
        {
          "$ref": "../services/metadataService.json#/definitions/metadataConnection"
        },
        {
          "$ref": "../services/storageService.json#/definitions/storageConnection"
        },
        {
          "$ref": "../services/searchService.json#/definitions/searchConnection"
        },
        {
          "$ref": "../services/securityService.json#/definitions/securityConnection"
        }
      ]
    },
    "serviceType": {
      "description": "Type of service such as Database, Dashboard, Messaging, etc.",
      "$ref": "../services/serviceType.json"
    },
    "connectionType": {
      "description": "Type of the connection to test such as Snowflake, MySQL, Looker, etc.",
      "type": "string"
    },
    "serviceName": {
      "description": "Optional value that identifies this service name.",
      "$ref": "../../type/basic.json#/definitions/entityName",
      "default": null
    },
    "secretsManagerProvider": {
      "description": "Secrets Manager Provider to use for fetching secrets.",
      "$ref": "../../security/secrets/secretsManagerProvider.json",
      "default": "db"
    },
    "ingestionRunner": {
      "description": "Optional value of the ingestion runner name responsible for running the test",
      "type": "string"
    }
  },
  "additionalProperties": false
}