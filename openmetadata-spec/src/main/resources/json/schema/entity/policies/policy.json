{
  "$id": "https://open-metadata.org/schema/entity/policies/policy.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Policy",
  "description": "A `Policy` defines control that needs to be applied across different Data Entities.",
  "type": "object",
  "javaType": "org.openmetadata.schema.entity.policies.Policy",
  "javaInterfaces": ["org.openmetadata.schema.EntityInterface"],
  "definitions": {
    "rules": {
      "description": "A set of rules associated with the Policy.",
      "type": "array",
      "items": {
        "$ref": "accessControl/rule.json"
      }
    }
  },
  "properties": {
    "id": {
      "description": "Unique identifier that identifies this Policy.",
      "$ref": "../../type/basic.json#/definitions/uuid"
    },
    "name": {
      "description": "Name that uniquely identifies this Policy.",
      "$ref": "../../type/basic.json#/definitions/entityName"
    },
    "fullyQualifiedName": {
      "description": "Name that uniquely identifies a Policy.",
      "$ref": "../../type/basic.json#/definitions/entityName"
    },
    "displayName": {
      "description": "Display name for this Policy.",
      "type": "string"
    },
    "description": {
      "description": "A short description of the Policy, comprehensible to regular users.",
      "$ref": "../../type/basic.json#/definitions/markdown"
    },
    "owners": {
      "description": "Owners of this Policy.",
      "$ref": "../../type/entityReferenceList.json",
      "default": null
    },
    "href": {
      "description": "Link to the resource corresponding to this entity.",
      "$ref": "../../type/basic.json#/definitions/href"
    },
    "enabled": {
      "description": "Is the policy enabled.",
      "type": "boolean",
      "default": true
    },
    "version": {
      "description": "Metadata version of the Policy.",
      "$ref": "../../type/entityHistory.json#/definitions/entityVersion"
    },
    "updatedAt": {
      "description": "Last update time corresponding to the new version of the Policy in Unix epoch time milliseconds.",
      "$ref": "../../type/basic.json#/definitions/timestamp"
    },
    "updatedBy": {
      "description": "User who made the update.",
      "type": "string"
    },
    "changeDescription": {
      "description": "Change that led to this version of the Policy.",
      "$ref": "../../type/entityHistory.json#/definitions/changeDescription"
    },
    "incrementalChangeDescription": {
      "description": "Change that lead to this version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/changeDescription"
    },
    "rules": {
      "description": "Set of rules that the policy contains.",
      "$ref": "#/definitions/rules"
    },
    "teams" : {
      "description": "Teams that use this policy directly and not through roles.",
      "$ref": "../../type/entityReferenceList.json"
    },
    "roles" : {
      "description": "Roles that use this policy.",
      "$ref": "../../type/entityReferenceList.json"
    },
    "location": {
      "description": "Location to which a policy is applied. This field is relevant only for `lifeCycle` policies.",
      "$ref": "../../type/entityReference.json",
      "default": null
    },
    "allowDelete" : {
      "description": "Some system policies can't be deleted",
      "type" : "boolean"
    },
    "allowEdit" : {
      "description": "Some system roles can't be edited",
      "type" : "boolean"
    },
    "deleted": {
      "description": "When `true` indicates the entity has been soft deleted.",
      "type": "boolean",
      "default": false
    },
    "provider" : {
      "$ref": "../../type/basic.json#/definitions/providerType"
    },
    "disabled" : {
      "description": "System policy can't be deleted. Use this flag to disable them.",
      "type": "boolean"
    },
    "domains" : {
      "description": "Domains the asset belongs to. When not set, the asset inherits the domain from the parent it belongs to.",
      "$ref": "../../type/entityReferenceList.json"
    }
  },
  "required": ["id", "name", "rules"],
  "additionalProperties": false
}
