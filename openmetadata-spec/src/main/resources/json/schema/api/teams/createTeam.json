{
  "$id": "https://open-metadata.org/schema/api/teams/createTeam.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CreateTeamRequest",
  "description": "Team entity",
  "type": "object",
  "javaType": "org.openmetadata.schema.api.teams.CreateTeam",
  "javaInterfaces": ["org.openmetadata.schema.CreateEntity"],

  "properties": {
    "teamType": {
      "description": "Team type",
      "$ref": "../../entity/teams/team.json#/definitions/teamType"
    },
    "name": {
      "$ref": "../../type/basic.json#/definitions/entityName"
    },
    "email": {
      "description": "Email address of the team.",
      "$ref": "../../type/basic.json#/definitions/email"
    },
    "displayName": {
      "description": "Optional name used for display purposes. Example 'Marketing Team'.",
      "type": "string"
    },
    "externalId": {
      "description": "External identifier for the team from an external identity provider (e.g., Azure AD group ID).",
      "type": "string"
    },
    "description": {
      "description": "Optional description of the team.",
      "$ref": "../../type/basic.json#/definitions/markdown"
    },
    "profile": {
      "description": "Optional team profile information.",
      "$ref": "../../type/profile.json"
    },
    "parents": {
      "description": "Parent teams. For an `Organization` the `parent` is always null. A `BusinessUnit` always has only one parent of type `BusinessUnit` or an `Organization`. A `Division` can have multiple parents of type `BusinessUnit` or `Division`. A `Department` can have multiple parents of type `Division` or `Department`.",
      "type": "array",
      "items": {
        "$ref": "../../type/basic.json#/definitions/uuid"
      },
      "default": null
    },
    "children": {
      "description": "Children teams. An `Organization` can have `BusinessUnit`, `Division` or `Department` as children. A `BusinessUnit` can have `BusinessUnit`, `Division`, or `Department` as children. A `Division` can have `Division` or `Department` as children. A `Department` can have `Department` as children.",
      "type": "array",
      "items": {
        "$ref": "../../type/basic.json#/definitions/uuid"
      },
      "default": null
    },
    "users": {
      "description": "Optional IDs of users that are part of the team.",
      "type": "array",
      "items": {
        "$ref": "../../type/basic.json#/definitions/uuid"
      },
      "default": null
    },
    "defaultRoles": {
      "description": "Roles to be assigned to all users that are part of this team.",
      "type": "array",
      "items": {
        "$ref": "../../type/basic.json#/definitions/uuid"
      },
      "default": null
    },
    "owners": {
      "description": "Owners sof this team. ",
      "$ref": "../../type/entityReferenceList.json",
      "default": null
    },
    "isJoinable": {
      "description": "Can any user join this team during sign up? Value of true indicates yes, and false no.",
      "type": "boolean",
      "default": true
    },
    "policies": {
      "description": "Policies that is attached to this team.",
      "type": "array",
      "items": {
        "$ref": "../../type/basic.json#/definitions/uuid"
      },
      "default": null
    },
    "domains" : {
      "description": "Domains the team belongs to.",
      "type": "array",
      "items": {
        "$ref": "../../type/basic.json#/definitions/entityName"
      },
      "default": null
    }
  },
  "required": ["name", "teamType"],
  "additionalProperties": false
}
