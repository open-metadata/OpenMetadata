{
  "$id": "https://open-metadata.org/schema/api/data/createMlModel.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CreateMlModelRequest",
  "description": "Create Ml Model entity request",
  "type": "object",
  "javaType": "org.openmetadata.schema.api.data.CreateMlModel",
  "javaInterfaces": ["org.openmetadata.schema.CreateEntity"],

  "properties": {
    "name": {
      "description": "Name that identifies this ML model.",
      "$ref": "../../type/basic.json#/definitions/entityName"
    },
    "displayName": {
      "description": "Display Name that identifies this ML model. It could be title or label from the source services",
      "type": "string"
    },
    "description": {
      "description": "Description of the ML model instance. How it was trained and for what it is used.",
      "$ref": "../../type/basic.json#/definitions/markdown"
    },
    "algorithm": {
      "description": "Algorithm used to train the ML Model",
      "type": "string",
      "default": "mlmodel"
    },
    "mlFeatures": {
      "description": "Features used to train the ML Model.",
      "type": "array",
      "items": {
        "$ref": "../../entity/data/mlmodel.json#/definitions/mlFeature"
      },
      "default": null
    },
    "target": {
      "description": "For supervised ML Models, the value to estimate.",
      "$ref": "../../type/basic.json#/definitions/entityName"
    },
    "mlHyperParameters": {
      "description": "Hyper Parameters used to train the ML Model.",
      "type": "array",
      "items": {
        "$ref": "../../entity/data/mlmodel.json#/definitions/mlHyperParameter"
      },
      "default": null
    },
    "dashboard": {
      "description": "Performance Dashboard fqn to track metric evolution",
      "$ref" : "../../type/basic.json#/definitions/fullyQualifiedEntityName"
    },
    "mlStore": {
      "description": "Location containing the ML Model. It can be a storage layer and/or a container repository.",
      "$ref": "../../entity/data/mlmodel.json#/definitions/mlStore"
    },
    "server": {
      "description": "Endpoint that makes the ML Model available, e.g,. a REST API serving the data or computing predictions.",
      "$ref": "../../type/basic.json#/definitions/href"
    },
    "tags": {
      "description": "Tags for this ML Model",
      "type": "array",
      "items": {
        "$ref": "../../type/tagLabel.json"
      },
      "default": null
    },
    "owners": {
      "description": "Owners of this database",
      "$ref": "../../type/entityReferenceList.json",
      "default": null
    },
    "service": {
      "description": "Link to the MLModel service fqn where this pipeline is hosted in",
      "$ref": "../../type/basic.json#/definitions/fullyQualifiedEntityName"
    },
    "extension": {
      "description": "Entity extension data with custom attributes added to the entity.",
      "$ref": "../../type/basic.json#/definitions/entityExtension"
    },
    "sourceUrl": {
      "description": "Source URL of mlModel.",
      "$ref": "../../type/basic.json#/definitions/sourceUrl"
    },
    "domains" : {
      "description": "Fully qualified names of the domains the MLModel belongs to.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "dataProducts" : {
      "description": "List of fully qualified names of data products this entity is part of.",
      "type": "array",
      "items" : {
        "$ref" : "../../type/basic.json#/definitions/fullyQualifiedEntityName"
      }
    },
    "lifeCycle": {
      "description": "Life Cycle of the entity",
      "$ref": "../../type/lifeCycle.json"
    },
    "sourceHash": {
      "description": "Source hash of the entity",
      "type": "string",
      "minLength": 1,
      "maxLength": 32
    }
  },
  "required": ["name", "service"],
  "additionalProperties": false
}
