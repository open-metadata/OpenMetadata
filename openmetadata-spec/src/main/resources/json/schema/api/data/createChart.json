{
  "$id": "https://open-metadata.org/schema/api/data/createChart.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CreateChartRequest",
  "description": "Create Chart entity request",
  "type": "object",
  "javaType": "org.openmetadata.schema.api.data.CreateChart",
  "javaInterfaces": ["org.openmetadata.schema.CreateEntity"],
  "properties": {
    "name": {
      "description": "Name that identifies this Chart.",
      "$ref": "../../type/basic.json#/definitions/entityName"
    },
    "displayName": {
      "description": "Display Name that identifies this Chart. It could be title or label from the source services",
      "type": "string"
    },
    "description": {
      "description": "Description of the chart instance. What it has and how to use it.",
      "$ref": "../../type/basic.json#/definitions/markdown"
    },
    "chartType": {
      "$ref": "../../entity/data/chart.json#/definitions/chartType"
    },
    "sourceUrl": {
      "description": "Chart URL suffix from its service.",
      "$ref": "../../type/basic.json#/definitions/sourceUrl"
    },
    "tags": {
      "description": "Tags for this chart",
      "type": "array",
      "items": {
        "$ref": "../../type/tagLabel.json"
      },
      "default": null
    },
    "owners": {
      "description": "Owners of this chart",
      "$ref": "../../type/entityReferenceList.json",
      "default": null
    },
    "service": {
      "description": "Link to the chart service where this chart is hosted in",
      "$ref": "../../type/basic.json#/definitions/fullyQualifiedEntityName"
    },
    "domains" : {
      "description": "Fully qualified names of the domains the Chart belongs to.",
      "type": "array",
      "items": {
        "$ref" : "../../type/basic.json#/definitions/fullyQualifiedEntityName"
      }
    },
    "dataProducts" : {
      "description": "List of fully qualified names of data products this entity is part of.",
      "type": "array",
      "items" : {
        "$ref" : "../../type/basic.json#/definitions/fullyQualifiedEntityName"
      }
    },
    "lifeCycle": {
      "description": "Life Cycle of the entity",
      "$ref": "../../type/lifeCycle.json"
    },
    "sourceHash": {
      "description": "Source hash of the entity",
      "type": "string",
      "minLength": 1,
      "maxLength": 32
    },
    "dashboards": {
      "description": "List of fully qualified name of dashboards containing this Chart.",
      "type": "array",
      "items": {
        "$ref": "../../type/basic.json#/definitions/fullyQualifiedEntityName"
      },
      "default": null
    }
  },
  "required": ["name", "service"],
  "additionalProperties": false
}
