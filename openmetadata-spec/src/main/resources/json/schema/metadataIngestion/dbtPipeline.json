{
  "$id": "https://open-metadata.org/schema/metadataIngestion/dbtPipeline.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "dbtPipeline",
  "description": "DBT Pipeline Configuration.",
  "type": "object",
  "definitions": {
    "dbtConfigType": {
      "description": "DBT Config Pipeline type",
      "type": "string",
      "enum": ["DBT"],
      "default": "DBT"
    }
  },
  "properties": {
    "type": {
      "description": "Pipeline type",
      "$ref": "#/definitions/dbtConfigType",
      "default": "DBT"
    },
    "dbtConfigSource": {
      "mask": true,
      "title": "DBT Configuration Source",
      "description": "Available sources to fetch DBT catalog and manifest files.",
      "oneOf": [
        {
          "$ref": "./dbtconfig/dbtCloudConfig.json"
        },
        {
          "$ref": "./dbtconfig/dbtLocalConfig.json"
        },
        {
          "$ref": "./dbtconfig/dbtHttpConfig.json"
        },
        {
          "$ref": "./dbtconfig/dbtS3Config.json"
        },
        {
          "$ref": "./dbtconfig/dbtGCSConfig.json"
        },
        {
          "$ref": "./dbtconfig/dbtAzureConfig.json"
        }
      ]
    },
    "searchAcrossDatabases": {
      "description": "Optional configuration to search across databases for tables or not",
      "type": "boolean",
      "default": false
    },
    "dbtUpdateDescriptions": {
      "description": "Optional configuration to update the description from DBT or not",
      "type": "boolean",
      "default": false
    },
    "dbtUpdateOwners": {
      "description": "Optional configuration to update the owners from DBT or not",
      "type": "boolean",
      "default": false
    },
    "includeTags": {
      "description": "Optional configuration to toggle the tags ingestion.",
      "type": "boolean",
      "default": true
    },
    "dbtClassificationName": {
      "title": "dbt Classification Name",
      "description": "Custom OpenMetadata Classification name for dbt tags.",
      "type": "string",
      "default": "dbtTags"
    },
    "schemaFilterPattern": {
      "description": "Regex to only fetch tables or databases that matches the pattern.",
      "$ref": "../type/filterPattern.json#/definitions/filterPattern",
      "title": "Schema Filter Pattern"

    },
    "tableFilterPattern": {
      "description": "Regex exclude tables or databases that matches the pattern.",
      "$ref": "../type/filterPattern.json#/definitions/filterPattern",
      "title": "Table Filter Pattern"
    },
    "parsingTimeoutLimit": {
      "description": "Configuration to set the timeout for parsing the query in seconds.",
      "type": "integer",
      "default": 300,
      "title": "Parsing Timeout Limit (in sec.)"
    },
    "databaseFilterPattern": {
      "description": "Regex to only fetch databases that matches the pattern.",
      "$ref": "../type/filterPattern.json#/definitions/filterPattern",
      "title": "Database Filter Pattern"
    },
    "tagFilterPattern": {
      "description": "Regex to only fetch tags that matches the pattern.",
      "$ref": "../type/filterPattern.json#/definitions/filterPattern",
      "title": "Tag Filter Pattern"
    }
  },
  "additionalProperties": false,
  "required": ["dbtConfigSource"]
}
