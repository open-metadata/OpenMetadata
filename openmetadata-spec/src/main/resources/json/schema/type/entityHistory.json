{
  "$id": "https://open-metadata.org/schema/type/entityHistory.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Entity Version History",
  "description": "This schema defines the type used for capturing version of history of entity.",
  "type": "object",
  "javaType": "org.openmetadata.schema.type.EntityHistory",
  "definitions": {
    "entityVersion": {
      "description": "Metadata version of the entity in the form `Major.Minor`. First version always starts from `0.1` when the entity is created. When the backward compatible changes are made to the entity, only the `Minor` version is incremented - example `1.0` is changed to `1.1`. When backward incompatible changes are made the `Major` version is incremented - example `1.1` to `2.0`.",
      "type": "number",
      "multipleOf": 0.1,
      "default": 0.1,
      "minimum": 0.1
    },
    "fieldName": {
      "description": "Name of the field of an entity.",
      "type": "string"
    },
    "fieldChange": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the entity field that changed.",
          "$ref": "#/definitions/fieldName"
        },
        "oldValue": {
          "description": "Previous value of the field. Note that this is a JSON string and use the corresponding field type to deserialize it."
        },
        "newValue": {
          "description": "New value of the field. Note that this is a JSON string and use the corresponding field type to deserialize it."
        }
      },
      "additionalProperties": false
    },
    "changeDescription": {
      "description": "Description of the change.",
      "type": "object",
      "javaType": "org.openmetadata.schema.type.ChangeDescription",
      "properties": {
        "fieldsAdded": {
          "description": "Names of fields added during the version changes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/fieldChange"
          }
        },
        "fieldsUpdated": {
          "description": "Fields modified during the version changes with old and new values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/fieldChange"
          }
        },
        "fieldsDeleted": {
          "description": "Fields deleted during the version changes with old value before deleted.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/fieldChange"
          }
        },
        "previousVersion": {
          "description": "When a change did not result in change, this could be same as the current version.",
          "$ref": "#/definitions/entityVersion"
        },
        "changeSummary": {
          "$ref": "./changeSummaryMap.json"
        }
      },
      "additionalProperties": false
    },
    "incrementalChangeDescription": {
      "description": "Description of the change.",
      "type": "object",
      "javaType": "org.openmetadata.schema.type.ChangeDescription",
      "properties": {
        "fieldsAdded": {
          "description": "Names of fields added during the version changes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/fieldChange"
          }
        },
        "fieldsUpdated": {
          "description": "Fields modified during the version changes with old and new values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/fieldChange"
          }
        },
        "fieldsDeleted": {
          "description": "Fields deleted during the version changes with old value before deleted.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/fieldChange"
          }
        },
        "previousVersion": {
          "description": "When a change did not result in change, this could be same as the current version.",
          "$ref": "#/definitions/entityVersion"
        }
      },
      "additionalProperties": false
    }
  },
  "properties": {
    "entityType": {
      "description": "Entity type, such as `database`, `table`, `dashboard`, for which this version history is produced.",
      "type": "string"
    },
    "versions": {
      "descriptions": "All the versions of the entity ordered from the latest to the oldest version. Note the array element object has schema that corresponds to schema of the entity from the `entityType` attribute. For example, if `entityType` is `table`, then the schema of the object in the array is `table.json`.",
      "type": "array"
    }
  },
  "required": ["entityType", "versions"],
  "additionalProperties": false
}
