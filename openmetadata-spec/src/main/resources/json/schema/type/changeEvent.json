{
  "$id": "https://open-metadata.org/schema/type/changeEvent.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ChangeEvent",
  "description": "This schema defines the change event type to capture the changes to entities. Entities change due to user activity, such as updating description of a dataset, changing ownership, or adding new tags. Entity also changes due to activities at the metadata sources, such as a new dataset was created, a datasets was deleted, or schema of a dataset is modified. When state of entity changes, an event is produced. These events can be used to build apps and bots that respond to the change from activities.",
  "type": "object",
  "javaType": "org.openmetadata.schema.type.ChangeEvent",
  "properties": {
    "id": {
        "description": "Unique identifier for the event.",
        "$ref": "basic.json#/definitions/uuid"
    },
    "eventType": {
      "$ref": "./changeEventType.json"
    },
    "entityType": {
      "description": "Entity type that changed. Use the schema of this entity to process the entity attribute.",
      "type": "string"
    },
    "entityId": {
      "description": "Identifier of entity that was modified by the operation.",
      "$ref": "basic.json#/definitions/uuid"
    },
    "domains": {
      "description": "Domain of the entity that was modified by the operation.",
      "$ref": "entityReferenceList.json"
    },
    "entityFullyQualifiedName": {
      "description": "Fully Qualified Name of entity that was modified by the operation.",
      "type": "string"
    },
    "previousVersion": {
      "description": "Version of the entity before this change. Note that not all changes result in entity version change. When entity version is not changed, `previousVersion` is same as `currentVersion`.",
      "$ref": "entityHistory.json#/definitions/entityVersion"
    },
    "currentVersion": {
      "description": "Current version of the entity after this change. Note that not all changes result in entity version change. When entity version is not changed, `previousVersion` is same as `currentVersion`.",
      "$ref": "entityHistory.json#/definitions/entityVersion"
    },
    "userName": {
      "description": "Name of the user whose activity resulted in the change.",
      "type": "string"
    },
    "timestamp": {
      "description": "Timestamp when the change was made in Unix epoch time milliseconds.",
      "$ref": "basic.json#/definitions/timestamp"
    },
    "changeDescription": {
      "description": "For `eventType` `entityUpdated` this field captures details about what fields were added/updated/deleted. For `eventType` `entityCreated` or `entityDeleted` this field is null.",
      "$ref": "entityHistory.json#/definitions/changeDescription"
    },
    "incrementalChangeDescription": {
      "description": "Change that lead to this version of the entity.",
      "$ref": "../type/entityHistory.json#/definitions/changeDescription"
    },
    "entity": {
      "description": "For `eventType` `entityCreated`, this field captures JSON coded string of the entity using the schema corresponding to `entityType`."
    }
  },
  "required": ["id", "eventType", "entityType", "entityId", "timestamp"],
  "additionalProperties": false
}
