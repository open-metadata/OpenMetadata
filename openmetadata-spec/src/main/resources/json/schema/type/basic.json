{
  "$id": "https://open-metadata.org/schema/type/basic.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Basic",
  "description": "This schema defines basic common types that are used by other schemas.",
  "definitions": {
    "integer" : {
      "$comment" : "@om-field-type",
      "description": "An integer type.",
      "type" : "integer"
    },
    "number" : {
      "$comment" : "@om-field-type",
      "description": "A numeric type that includes integer or floating point numbers.",
      "type" : "number"
    },
    "string" : {
      "$comment" : "@om-field-type",
      "description": "A String type.",
      "type" : "string"
    },
    "uuid": {
      "description": "Unique id used to identify an entity.",
      "type": "string",
      "format": "uuid"
    },
    "email": {
      "$comment" : "@om-field-type",
      "description": "Email address of a user or other entities.",
      "type": "string",
      "format": "email",
      "pattern": "^[\\S.!#$%&â€™*+/=?^_`{|}~-]+@\\S+\\.\\S+$",
      "minLength": 6,
      "maxLength": 127
    },
    "timestamp": {
      "$comment" : "@om-field-type",
      "description": "Timestamp in Unix epoch time milliseconds.",
      "@comment": "Note that during code generation this is converted into long",
      "type": "integer",
      "format": "utc-millisec"
    },
    "href": {
      "description": "URI that points to a resource.",
      "type": "string",
      "format": "uri"
    },
    "timeInterval": {
      "$comment" : "@om-field-type",
      "type": "object",
      "description": "Time interval in unixTimeMillis.",
      "javaType": "org.openmetadata.schema.type.TimeInterval",
      "properties": {
        "start": {
          "description": "Start time in unixTimeMillis.",
          "type": "integer"
        },
        "end": {
          "description": "End time in unixTimeMillis.",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "duration": {
      "$comment" : "@om-field-type",
      "description": "Duration in ISO 8601 format in UTC. Example - 'P23DT23H'.",
      "type": "string"
    },
    "date": {
      "description": "Date in ISO 8601 format in UTC. Example - '2018-11-13'.",
      "type": "string",
      "format": "date"
    },
    "dateTime": {
      "description": "Date and time in ISO 8601 format. Example - '2018-11-13T20:20:39+00:00'.",
      "type": "string",
      "format": "date-time"
    },
    "time": {
      "description": "time in ISO 8601 format. Example - '20:20:39+00:00'.",
      "type": "string",
      "format": "time"
    },
    "date-cp": {
      "$comment" : "@om-field-type",
      "description": "Date as defined in custom property.",
      "type": "string"
    },
    "dateTime-cp": {
      "$comment" : "@om-field-type",
      "description": "Date and time as defined in custom property.",
      "type": "string"
    },
    "time-cp": {
      "$comment" : "@om-field-type",
      "description": "Time as defined in custom property.",
      "type": "string"
    },
    "enum": {
      "$comment" : "@om-field-type",
      "description": "List of values in Enum.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "timezone": {
      "description": "Timezone of the user in the format `America/Los_Angeles`, `Brazil/East`, etc.",
      "type": "string",
      "format": "timezone"
    },
    "entityLink": {
      "description": "Link to an entity or field within an entity using this format `<#E::{entities}::{entityType}::{field}::{arrayFieldName}::{arrayFieldValue}`.",
      "type": "string",
      "pattern": "(?U)^<#E::\\w+::(?:[^:<>|]|:[^:<>|])+(?:::(?:[^:<>|]|:[^:<>|])+)*>$"
    },
    "entityName": {
      "description": "Name that identifies an entity.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^((?!::).)*$"
    },
    "testCaseEntityName": {
      "description": "Name that identifies a test definition and test case.",
      "type": "string",
      "minLength": 1,
      "pattern": "^((?!::).)*$"
    },
    "fullyQualifiedEntityName": {
      "description": "A unique name that identifies an entity. Example for table 'DatabaseService.Database.Schema.Table'.",
      "type": "string",
      "minLength": 1,
      "maxLength": 3072
    },
    "sqlQuery": {
      "$comment" : "@om-field-type",
      "description": "SQL query statement. Example - 'select * from orders'.",
      "type": "string"
    },
    "sqlFunction": {
      "description": "SQL function. Example - 'AVG()`, `COUNT()`, etc..",
      "type": "string"
    },
    "markdown": {
      "$comment" : "@om-field-type",
      "description": "Text in Markdown format.",
      "type": "string"
    },
    "expression": {
      "description": "Expression in SpEL.",
      "type": "string"
    },
    "jsonSchema": {
      "description": "JSON schema encoded as string. This will be used to validate the JSON fields using this schema.",
      "type": "string"
    },
    "entityExtension" : {
      "description": "Entity extension data with custom attributes added to the entity."
    },
    "providerType": {
      "javaType": "org.openmetadata.schema.type.ProviderType",
      "description": "Type of provider of an entity. Some entities are provided by the `system`. Some are entities created and provided by the `user`. Typically `system` provide entities can't be deleted and can only be disabled. Some apps such as AutoPilot create entities with `automation` provider type. These entities can be deleted by the user.",
      "type": "string",
      "enum": ["system", "user", "automation"],
      "default": "user"
    },
    "componentConfig": {
      "description": "key/value pairs to pass to workflow component.",
      "type": "object",
      "additionalProperties": {
        ".{1,}": { "type": "string" }
      }
    },
    "map":  {
      "description": "A generic map that can be deserialized later.",
      "existingJavaType" : "java.util.Map<String,Object>",
      "type" : "object",
      "additionalProperties": true
    },
    "status" : {
      "javaType": "org.openmetadata.schema.type.ApiStatus",
      "description": "State of an action over API.",
      "type" : "string",
      "enum" : ["success", "failure", "aborted", "partialSuccess"]
    },
    "sourceUrl" : {
      "description": "Source Url of the respective entity.",
      "type" : "string",
      "format": "url"
    },
    "style": {
      "description": "UI Style is used to associate a color code and/or icon to entity to customize the look of that entity in UI.",
      "type": "object",
      "javaType": "org.openmetadata.schema.entity.type.Style",
      "properties": {
        "color": {
          "description": "Hex Color Code to mark an entity such as GlossaryTerm, Tag, Domain or Data Product.",
          "type": "string"
        },
        "iconURL": {
          "description": "An icon to associate with GlossaryTerm, Tag, Domain or Data Product.",
          "type" : "string",
          "format": "url"
        }
      },
      "additionalProperties": false
    },
    "semanticsRule": {
      "type": "object",
      "javaType": "org.openmetadata.schema.type.SemanticsRule",
      "description": "Semantics rule defined in the data contract.",
      "properties": {
        "name": {
          "title": "Rule Name",
          "description": "Name of the semantics rule.",
          "type": "string"
        },
        "description": {
          "title": "Rule Description",
          "description": "Description of the semantics rule.",
          "$ref": "#/definitions/markdown"
        },
        "rule": {
          "title": "Rule Definition",
          "description": "Definition of the semantics rule.",
          "type": "string",
          "outputType": "jsonlogic",
          "format": "queryBuilder"
        },
        "enabled": {
          "title": "Enabled",
          "description": "Indicates if the semantics rule is enabled.",
          "type": "boolean",
          "default": true
        },
        "entityType": {
          "title": "Entity Type",
          "description": "Type of the entity to which this semantics rule applies.",
          "type": "string",
          "default": null
        }
      },
      "required": [
        "name",
        "description",
        "rule",
        "enabled"
      ],
      "additionalProperties": false
    }
  }
}
