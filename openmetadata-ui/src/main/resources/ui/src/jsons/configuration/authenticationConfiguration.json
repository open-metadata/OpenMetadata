{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AuthenticationConfiguration",
  "description": "This schema defines the Authentication Configuration.",
  "type": "object",
  "javaType": "org.openmetadata.schema.api.security.AuthenticationConfiguration",
  "definitions": {
    "responseType": {
      "javaType": "org.openmetadata.schema.api.security.ResponseType",
      "description": "Response Type",
      "type": "string",
      "enum": ["id_token", "code"],
      "default": "id_token"
    }
  },
  "properties": {
    "clientType": {
      "javaType": "org.openmetadata.schema.api.security.ClientType",
      "description": "Client Type",
      "type": "string",
      "enum": ["public", "confidential"],
      "enumNames": ["Public", "Confidential"],
      "default": "public"
    },
    "provider": {
      "javaType": "org.openmetadata.schema.services.connections.metadata.AuthProvider",
      "description": "OpenMetadata Server Authentication Provider. Make sure configure same auth providers as the one configured on OpenMetadata server.",
      "type": "string",
      "enum": [
        "basic",
        "azure",
        "google",
        "okta",
        "auth0",
        "aws-cognito",
        "custom-oidc",
        "ldap",
        "saml",
        "openmetadata"
      ],
      "default": "basic"
    },
    "responseType": {
      "description": "This is used by auth provider provide response as either id_token or code.",
      "javaType": "org.openmetadata.schema.api.security.ResponseType",
      "type": "string",
      "enum": ["id_token", "code"],
      "default": "id_token"
    },
    "providerName": {
      "description": "Custom OIDC Authentication Provider Name",
      "type": "string"
    },
    "publicKeyUrls": {
      "description": "List of Public Key URLs",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "tokenValidationAlgorithm": {
      "description": "Token Validation Algorithm to use.",
      "type": "string",
      "enum": ["RS256", "RS384", "RS512"],
      "default": "RS256"
    },
    "authority": {
      "description": "Authentication Authority",
      "type": "string"
    },
    "clientId": {
      "description": "Client ID",
      "type": "string"
    },
    "callbackUrl": {
      "description": "Callback URL",
      "type": "string"
    },
    "jwtPrincipalClaims": {
      "description": "Jwt Principal Claim",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "jwtPrincipalClaimsMapping": {
      "description": "Jwt Principal Claim Mapping",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "enableSelfSignup": {
      "description": "Enable Self Sign Up",
      "type": "boolean",
      "default": false
    },
    "ldapConfiguration": {
      "description": "LDAP Configuration in case the Provider is LDAP",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "LdapConfiguration",
      "type": "object",
      "javaType": "org.openmetadata.schema.auth.LdapConfiguration",
      "properties": {
        "host": {
          "description": "LDAP server address without scheme(Example :- localhost)",
          "type": "string"
        },
        "port": {
          "description": "Port of the server",
          "type": "integer"
        },
        "maxPoolSize": {
          "description": "No of connection to create the pool with",
          "type": "integer",
          "default": 3
        },
        "isFullDn": {
          "description": "If enable need to give full dn to login",
          "type": "boolean",
          "default": false
        },
        "dnAdminPrincipal": {
          "description": "Distinguished Admin name with search capabilities",
          "type": "string"
        },
        "dnAdminPassword": {
          "description": "Password for LDAP Admin",
          "type": "string"
        },
        "sslEnabled": {
          "description": "LDAPS (secure LDAP) or LDAP",
          "type": "boolean",
          "default": false
        },
        "userBaseDN": {
          "description": "User base distinguished name",
          "type": "string"
        },
        "groupBaseDN": {
          "description": "Group base distinguished name",
          "type": "string"
        },
        "roleAdminName": {
          "description": "Admin role name",
          "type": "string"
        },
        "allAttributeName": {
          "description": "All attribute name",
          "type": "string"
        },
        "mailAttributeName": {
          "description": "Email attribute name",
          "type": "string"
        },
        "usernameAttributeName": {
          "description": "User Name attribute name",
          "type": "string"
        },
        "groupAttributeName": {
          "description": "Group Name attribute name",
          "type": "string"
        },
        "groupAttributeValue": {
          "description": "Group attribute value",
          "type": "string"
        },
        "groupMemberAttributeName": {
          "description": "Group Member Name attribute name",
          "type": "string"
        },
        "authRolesMapping": {
          "description": "Json string of roles mapping between LDAP roles and Ranger roles",
          "type": "string"
        },
        "authReassignRoles": {
          "description": "Roles should be reassign every time user login",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "truststoreFormat": {
          "description": "Truststore format e.g. PKCS12, JKS.",
          "type": "string"
        },
        "truststoreConfigType": {
          "description": "Truststore Type e.g. TrustAll, HostName, JVMDefault, CustomTrustStore.",
          "type": "string",
          "enum": ["TrustAll", "JVMDefault", "HostName", "CustomTrustStore"]
        },
        "trustStoreConfig": {
          "description": "Truststore Configuration",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "TruststoreConfig",
          "type": "object",
          "javaType": "org.openmetadata.schema.auth.ldapTrustStoreConfig.TruststoreConfig",
          "properties": {
            "customTrustManagerConfig": {
              "description": "CustomTrust Configuration",
              "$schema": "http://json-schema.org/draft-07/schema#",
              "title": "CustomTrustManagerConfig",
              "type": "object",
              "javaType": "org.openmetadata.schema.auth.ldapTrustStoreConfig.CustomTrustManagerConfig",
              "properties": {
                "verifyHostname": {
                  "description": "list of host names to verify",
                  "type": "boolean",
                  "default": false
                },
                "examineValidityDates": {
                  "description": "Examine validity dates of certificate",
                  "type": "boolean",
                  "default": false
                },
                "trustStoreFilePath": {
                  "description": "Truststore file path",
                  "type": "string"
                },
                "trustStoreFilePassword": {
                  "description": "Truststore file password",
                  "type": "string"
                },
                "trustStoreFileFormat": {
                  "description": "Truststore file format",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "hostNameConfig": {
              "description": "HostName Configuration",
              "$schema": "http://json-schema.org/draft-07/schema#",
              "title": "HostNameConfig",
              "type": "object",
              "javaType": "org.openmetadata.schema.auth.ldapTrustStoreConfig.HostNameConfig",
              "properties": {
                "allowWildCards": {
                  "description": "Allow wildcards",
                  "type": "boolean",
                  "default": false
                },
                "acceptableHostNames": {
                  "description": "list of acceptable host names",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "jvmDefaultConfig": {
              "description": "JVMDefault Configuration",
              "$schema": "http://json-schema.org/draft-07/schema#",
              "title": "JVMDefaultConfig",
              "type": "object",
              "javaType": "org.openmetadata.schema.auth.ldapTrustStoreConfig.JVMDefaultConfig",
              "properties": {
                "verifyHostname": {
                  "description": "list of host names to verify",
                  "type": "boolean",
                  "default": false
                }
              },
              "additionalProperties": false
            },
            "trustAllConfig": {
              "description": "TrustAll Configuration",
              "$schema": "http://json-schema.org/draft-07/schema#",
              "title": "TrustAllConfig",
              "type": "object",
              "javaType": "org.openmetadata.schema.auth.ldapTrustStoreConfig.TrustAllConfig",
              "properties": {
                "examineValidityDates": {
                  "description": "Examine validity dates of certificate",
                  "type": "boolean",
                  "default": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "required": [
        "host",
        "port",
        "dnAdminPrincipal",
        "dnAdminPassword",
        "userBaseDN",
        "mailAttributeName"
      ],
      "additionalProperties": false
    },
    "samlConfiguration": {
      "description": "Saml Configuration that is applicable only when the provider is Saml",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SamlSSOClientConfig",
      "type": "object",
      "javaType": "org.openmetadata.catalog.security.client.SamlSSOClientConfig",
      "definitions": {
        "idp": {
          "javaType": "org.openmetadata.catalog.type.IdentityProviderConfig",
          "description": "This schema defines defines the identity provider config.",
          "type": "object",
          "properties": {
            "entityId": {
              "description": "Identity Provider Entity ID usually same as the SSO login URL.",
              "type": "string"
            },
            "ssoLoginUrl": {
              "description": "SSO Login URL.",
              "type": "string"
            },
            "idpX509Certificate": {
              "description": "X509 Certificate ",
              "type": "string",
              "format": "password"
            },
            "authorityUrl": {
              "description": "Authority URL to redirect the users on Sign In page",
              "type": "string"
            },
            "nameId": {
              "description": "Authority URL to redirect the users on Sign In page",
              "type": "string",
              "default": "urn:oasis:names:tc:SAML:2.0:nameid-format:emailAddress"
            }
          },
          "required": ["entityId", "ssoLoginUrl"],
          "additionalProperties": false
        },
        "sp": {
          "javaType": "org.openmetadata.catalog.type.ServiceProviderConfig",
          "description": "This schema defines defines the identity provider config.",
          "type": "object",
          "properties": {
            "entityId": {
              "description": "Service Provider Entity ID.",
              "type": "string"
            },
            "acs": {
              "description": "Assertion Consumer URL.",
              "type": "string"
            },
            "spX509Certificate": {
              "description": "X509 Certificate ",
              "type": "string",
              "format": "password"
            },
            "spPrivateKey": {
              "description": "Sp Private Key for Signing and Encryption Only",
              "type": "string",
              "format": "password"
            },
            "callback": {
              "description": "Service Provider Entity ID usually same as the SSO login URL.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": ["entityId", "acs", "callback"]
        },
        "security": {
          "javaType": "org.openmetadata.catalog.type.SamlSecurityConfig",
          "description": "This schema defines defines the security config for SAML.",
          "type": "object",
          "properties": {
            "strictMode": {
              "description": "Only accept valid signed and encrypted assertions if the relevant flags are set",
              "type": "boolean",
              "default": false
            },
            "validateXml": {
              "description": "In case of strict mode whether to validate XML format.",
              "type": "boolean",
              "default": false
            },
            "tokenValidity": {
              "description": "Validity for the JWT Token created from SAML Response",
              "type": "integer",
              "default": "3600"
            },
            "sendEncryptedNameId": {
              "description": "Encrypt Name Id while sending requests from SP.",
              "type": "boolean",
              "default": false
            },
            "sendSignedAuthRequest": {
              "description": "Sign the Authn Request while sending.",
              "type": "boolean",
              "default": false
            },
            "signSpMetadata": {
              "description": "Want the Metadata of this SP to be signed.",
              "type": "boolean",
              "default": false
            },
            "wantMessagesSigned": {
              "description": "SP requires the messages received to be signed.",
              "type": "boolean",
              "default": false
            },
            "wantAssertionsSigned": {
              "description": "SP requires the assertions received to be signed.",
              "type": "boolean",
              "default": false
            },
            "wantAssertionEncrypted": {
              "description": "SP requires the assertion received to be encrypted.",
              "type": "boolean",
              "default": false
            },
            "keyStoreFilePath": {
              "description": "KeyStore File Path",
              "type": "string"
            },
            "keyStoreAlias": {
              "description": "KeyStore Alias",
              "type": "string"
            },
            "keyStorePassword": {
              "description": "KeyStore Password",
              "type": "string",
              "format": "password"
            }
          },
          "additionalProperties": false
        }
      },
      "properties": {
        "idp": {
          "javaType": "org.openmetadata.catalog.type.IdentityProviderConfig",
          "description": "This schema defines defines the identity provider config.",
          "type": "object",
          "properties": {
            "entityId": {
              "description": "Identity Provider Entity ID usually same as the SSO login URL.",
              "type": "string"
            },
            "ssoLoginUrl": {
              "description": "SSO Login URL.",
              "type": "string"
            },
            "idpX509Certificate": {
              "description": "X509 Certificate ",
              "type": "string",
              "format": "password"
            },
            "authorityUrl": {
              "description": "Authority URL to redirect the users on Sign In page",
              "type": "string"
            },
            "nameId": {
              "description": "Authority URL to redirect the users on Sign In page",
              "type": "string",
              "default": "urn:oasis:names:tc:SAML:2.0:nameid-format:emailAddress"
            }
          },
          "required": ["entityId", "ssoLoginUrl"],
          "additionalProperties": false
        },
        "sp": {
          "javaType": "org.openmetadata.catalog.type.ServiceProviderConfig",
          "description": "This schema defines defines the identity provider config.",
          "type": "object",
          "properties": {
            "entityId": {
              "description": "Service Provider Entity ID.",
              "type": "string"
            },
            "acs": {
              "description": "Assertion Consumer URL.",
              "type": "string"
            },
            "spX509Certificate": {
              "description": "X509 Certificate ",
              "type": "string",
              "format": "password"
            },
            "spPrivateKey": {
              "description": "Sp Private Key for Signing and Encryption Only",
              "type": "string",
              "format": "password"
            },
            "callback": {
              "description": "Service Provider Entity ID usually same as the SSO login URL.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": ["entityId", "acs", "callback"]
        },
        "security": {
          "javaType": "org.openmetadata.catalog.type.SamlSecurityConfig",
          "description": "This schema defines defines the security config for SAML.",
          "type": "object",
          "properties": {
            "strictMode": {
              "description": "Only accept valid signed and encrypted assertions if the relevant flags are set",
              "type": "boolean",
              "default": false
            },
            "validateXml": {
              "description": "In case of strict mode whether to validate XML format.",
              "type": "boolean",
              "default": false
            },
            "tokenValidity": {
              "description": "Validity for the JWT Token created from SAML Response",
              "type": "integer",
              "default": "3600"
            },
            "sendEncryptedNameId": {
              "description": "Encrypt Name Id while sending requests from SP.",
              "type": "boolean",
              "default": false
            },
            "sendSignedAuthRequest": {
              "description": "Sign the Authn Request while sending.",
              "type": "boolean",
              "default": false
            },
            "signSpMetadata": {
              "description": "Want the Metadata of this SP to be signed.",
              "type": "boolean",
              "default": false
            },
            "wantMessagesSigned": {
              "description": "SP requires the messages received to be signed.",
              "type": "boolean",
              "default": false
            },
            "wantAssertionsSigned": {
              "description": "SP requires the assertions received to be signed.",
              "type": "boolean",
              "default": false
            },
            "wantAssertionEncrypted": {
              "description": "SP requires the assertion received to be encrypted.",
              "type": "boolean",
              "default": false
            },
            "keyStoreFilePath": {
              "description": "KeyStore File Path",
              "type": "string"
            },
            "keyStoreAlias": {
              "description": "KeyStore Alias",
              "type": "string"
            },
            "keyStorePassword": {
              "description": "KeyStore Password",
              "type": "string",
              "format": "password"
            }
          },
          "additionalProperties": false
        },
        "debugMode": {
          "description": "Get logs from the Library in debug mode",
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false,
      "required": ["idp", "sp"]
    },
    "oidcConfiguration": {
      "description": "Oidc Configuration for Confidential Client Type",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OidcClientConfig",
      "type": "object",
      "javaType": "org.openmetadata.schema.security.client.OidcClientConfig",
      "properties": {
        "type": {
          "description": "IDP type (Example Google,Azure).",
          "type": "string"
        },
        "id": {
          "description": "Client ID.",
          "type": "string"
        },
        "secret": {
          "description": "Client Secret.",
          "type": "string",
          "format": "password"
        },
        "scope": {
          "description": "Oidc Request Scopes.",
          "type": "string",
          "default": "openid email profile"
        },
        "discoveryUri": {
          "description": "Discovery Uri for the Client.",
          "type": "string"
        },
        "useNonce": {
          "description": "Use Nonce.",
          "type": "string",
          "default": true
        },
        "preferredJwsAlgorithm": {
          "description": "Preferred Jws Algorithm.",
          "type": "string",
          "default": "RS256"
        },
        "responseType": {
          "description": "Auth0 Client Secret Key.",
          "type": "string",
          "default": "code"
        },
        "disablePkce": {
          "description": "Disable PKCE.",
          "type": "boolean",
          "default": true
        },
        "maxClockSkew": {
          "description": "Max Clock Skew",
          "type": "string"
        },
        "clientAuthenticationMethod": {
          "description": "Client Authentication Method.",
          "type": "string",
          "enum": [
            "client_secret_basic",
            "client_secret_post",
            "client_secret_jwt",
            "private_key_jwt"
          ]
        },
        "tokenValidity": {
          "description": "Validity for the JWT Token created from SAML Response",
          "type": "integer",
          "default": "3600"
        },
        "customParams": {
          "description": "Custom Params.",
          "existingJavaType": "java.util.Map<String,String>",
          "type": "object"
        },
        "tenant": {
          "description": "Tenant in case of Azure.",
          "type": "string"
        },
        "serverUrl": {
          "description": "Server Url.",
          "type": "string"
        },
        "callbackUrl": {
          "description": "Callback Url.",
          "type": "string"
        },
        "maxAge": {
          "description": "Validity for the JWT Token created from SAML Response",
          "type": "string"
        },
        "prompt": {
          "description": "Prompt whether login/consent",
          "type": "string"
        },
        "sessionExpiry": {
          "description": "Validity for the Session in case of confidential clients",
          "type": "integer",
          "default": "604800"
        }
      },
      "required": ["id", "secret", "discoveryUri", "tenant"],
      "additionalProperties": false
    }
  },
  "required": [
    "provider",
    "providerName",
    "publicKeyUrls",
    "authority",
    "callbackUrl",
    "clientId",
    "jwtPrincipalClaims"
  ],
  "additionalProperties": false
}
