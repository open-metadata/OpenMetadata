# ============================================
# Test Case 02: FQN and Name Matching
# ============================================
# Test Scenario: Test FQN exact match vs simple name fallback
# Expected Results:
#   - finance_db.accounting → "accounting-team" (FQN exact match)
#   - finance_db.treasury → "treasury-team" (simple name match, should log INFO)
#   - finance_db.accounting.expenses → "expense-team" (FQN exact match)
#   - finance_db.treasury.investments → "investment-team" (simple name match, should log INFO)
#
# Expected Logs:
#   INFO: "FQN match failed for 'finance_db.treasury', matched using simple name 'treasury'"
#   INFO: "FQN match failed for 'finance_db.treasury.investments', matched using simple name 'investments'"

source:
  type: postgres
  serviceName: postgres-test-02-fqn
  serviceConnection:
    config:
      type: Postgres
      username: admin
      authType:
        password: admin123
      hostPort: localhost:5433
      database: finance_db
  sourceConfig:
    config:
      type: DatabaseMetadata
      
      # Owner Configuration - FQN vs simple name matching
      ownerConfig:
        default: "data-platform-team"
        
        databaseSchema:
          "finance_db.accounting": "accounting-team"  # FQN exact match
          "treasury": "treasury-team"                 # Simple name match (should log INFO)
        
        table:
          "finance_db.accounting.expenses": "expense-team"  # FQN exact match
          "investments": "investment-team"                  # Simple name match (should log INFO)
        
        enableInheritance: true
      
      includeTables: true
      includeViews: true
      markDeletedTables: true
      useFqnForFiltering: true
      overrideMetadata: true

sink:
  type: metadata-rest
  config: {}

workflowConfig:
  loggerLevel: DEBUG
  openMetadataServerConfig:
    hostPort: http://localhost:8585/api
    authProvider: openmetadata
    securityConfig:
      jwtToken: "YOUR_JWT_TOKEN_HERE"
