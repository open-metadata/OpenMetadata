CREATE DATABASE IF NOT EXISTS thirdeye;

USE thirdeye;

-- Create table for data usage snapshot
-- This table stores information about database objects and their usage patterns
-- Generated by ETL

-- Set storage engine

SET default_storage_engine=InnoDB;

-- ============================================
-- 1. FACT TABLE - Daily snapshots of table usage
-- ============================================
CREATE TABLE IF NOT EXISTS `fact_datalake_table_usage_inventory` (
    -- For MySQL 5.7+: GENERATED columns are supported
    `FQN` VARCHAR(500) GENERATED ALWAYS AS (CONCAT(SERVICE, '-', DATABASE_NAME, '-', DB_SCHEMA, '-', TABLE_NAME)) STORED,
    `DATABASE_NAME` VARCHAR(100) DEFAULT NULL,
    `DB_SCHEMA` VARCHAR(100) DEFAULT NULL,
    `TABLE_NAME` VARCHAR(200) DEFAULT NULL,
    `TABLE_TYPE` VARCHAR(50) DEFAULT NULL,
    `ROLL_30D_TBL_UC` INT DEFAULT NULL COMMENT '30-day rolling unique user count',
    `ROLL_30D_SCHEMA_UC` INT DEFAULT NULL COMMENT '30-day rolling schema users',
    `ROLL_30D_DB_UC` INT DEFAULT NULL COMMENT '30-day rolling database users',
    `ROLL_30D_TBL_QC` INT DEFAULT NULL COMMENT '30-day rolling query count',
    `CREATE_DATE` DATE DEFAULT NULL,
    `LAST_ACCESSED_DATE` DATE DEFAULT NULL,
    `LAST_REFRESHED_DATE` DATE DEFAULT NULL,
    `SIZE_GB` DECIMAL(20,10) DEFAULT NULL,
    `RUN_DATE` DATE DEFAULT NULL,
    `START_DATE` DATE DEFAULT NULL,
    `END_DATE` DATE DEFAULT NULL,
    `ROLL_30D_START_DATE` DATE DEFAULT NULL,
    `SERVICE` VARCHAR(50) DEFAULT NULL COMMENT 'SNOWFLAKE, DATABRICKS, etc',
    `CREATED_BY` VARCHAR(100) DEFAULT NULL,
    UNIQUE KEY `unique_record` (`FQN`(255),`RUN_DATE`), -- MySQL key length limit
    INDEX `idx_run_date` (`RUN_DATE`),
    INDEX `idx_service` (`SERVICE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;



DROP TABLE IF EXISTS cost_basis_config;
DROP TABLE IF EXISTS cost_tracking;
DROP TABLE IF EXISTS detection_rules;
DROP TABLE IF EXISTS entity_decisions;
DROP TABLE IF EXISTS notification_engagement_tracking;
DROP TABLE IF EXISTS opportunity_campaigns;
DROP TABLE IF EXISTS warehouse_inventory;
DROP table if exists warehouse_optimizations;

-- ============================================
-- 2. OPPORTUNITY CAMPAIGNS - Unified table for all opportunities
-- ============================================
CREATE TABLE IF NOT EXISTS `opportunity_campaigns` (
    `campaign_id` BIGINT AUTO_INCREMENT PRIMARY KEY,
    `campaign_name` VARCHAR(200) NOT NULL,
    `campaign_type` VARCHAR(50) NOT NULL COMMENT 'INDIVIDUAL, BULK_CLEANUP, PATTERN_BASED',

    `fqn_list` JSON NOT NULL COMMENT 'Array of FQNs: ["table1"] or ["table1","table2",...]',
    `total_items` INT DEFAULT 1,

    `grouping_rule` VARCHAR(100) DEFAULT NULL COMMENT 'BY_SCHEMA, BY_PATTERN, BY_AGE, BY_OWNER, BY_TABLE',

    -- Resource Information
    `service` VARCHAR(50) NOT NULL COMMENT 'SNOWFLAKE, DATABRICKS',
    `resource_type` VARCHAR(50) NOT NULL COMMENT 'TABLE, WAREHOUSE, DATABASE',
    `opportunity_type` VARCHAR(100) NOT NULL COMMENT 'UNUSED_TABLE, OVERSIZED_WAREHOUSE, etc',

    -- Cost Metrics
    `current_monthly_cost` DECIMAL(12,2) DEFAULT 0,
    `projected_savings` DECIMAL(12,2) DEFAULT 0,
    `confidence_score` DECIMAL(3,2) DEFAULT 0.85 COMMENT '0.00 to 1.00',

    `risk_level` ENUM('HIGH', 'MEDIUM', 'LOW') DEFAULT 'LOW',

    -- Status Tracking
    `status` ENUM('OPEN', 'IN_REVIEW', 'COMPLETED', 'EXPIRED') DEFAULT 'OPEN',
    `items_actioned` INT DEFAULT 0,
    `status_updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    `expires_at` DATE DEFAULT NULL,

    `detection_rule_id` VARCHAR(50) DEFAULT NULL,

    -- OpenMetadata Integration
    `om_task_id` VARCHAR(50) DEFAULT NULL COMMENT 'OpenMetadata task ID',

    -- Metadata
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `created_by` VARCHAR(100) DEFAULT 'system',
    `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    INDEX `idx_status` (`status`),
    INDEX `idx_campaign_type` (`campaign_type`),
    INDEX `idx_priority_status` ( `status`),
    INDEX `idx_om_task` (`om_task_id`),
    INDEX `idx_expires` (`expires_at`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


-- ============================================
-- 3. ENTITY DECISIONS - Audit trail for every decision
-- ============================================
DROP TABLE IF EXISTS `entity_decisions`;
CREATE TABLE IF NOT EXISTS `entity_decisions` (
    `decision_id` BIGINT AUTO_INCREMENT PRIMARY KEY,
    `campaign_id` BIGINT DEFAULT NULL COMMENT 'Links to campaign',

    -- Entity Information
    `service` VARCHAR(50) NOT NULL,
    `fqn` VARCHAR(500) NOT NULL,
    `type` VARCHAR(50) DEFAULT NULL,

    -- Decision Details
    `final_decision` ENUM('DELETE', 'ARCHIVE', 'KEEP', 'OPTIMIZE', 'DEFER') NOT NULL,
    `review_notes` TEXT DEFAULT NULL,
    `properties` JSON DEFAULT NULL COMMENT 'Additional decision metadata',

    -- Scheduling (for deferred actions)
    `scheduled_execution_date` DATE DEFAULT NULL,
    `actual_execution_date` DATE DEFAULT NULL,

    -- Decision Metadata
    `decision_date` DATE NOT NULL,
    `created_by` VARCHAR(100) NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `modified_by` VARCHAR(100) DEFAULT NULL,
    `modified_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    -- OpenMetadata Integration
    `om_task_id` VARCHAR(36) DEFAULT NULL,

    UNIQUE KEY `uk_fqn` (`fqn`(255)), -- MySQL key length limit
    INDEX `idx_campaign` (`campaign_id`),
    INDEX `idx_decision_date` (`decision_date`),
    INDEX `idx_final_decision` (`final_decision`),
    INDEX `idx_om_task` (`om_task_id`),
    CONSTRAINT `fk_campaign` FOREIGN KEY (`campaign_id`)
        REFERENCES `opportunity_campaigns`(`campaign_id`) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- ============================================
-- 4. NOTIFICATION ENGAGEMENT TRACKING
-- ============================================
CREATE TABLE IF NOT EXISTS `notification_engagement_tracking` (
    `tracking_id` BIGINT AUTO_INCREMENT PRIMARY KEY,
    `campaign_id` BIGINT NOT NULL,

    -- OpenMetadata Reference
    `om_entity_id` VARCHAR(36) NOT NULL COMMENT 'Task/Alert ID in OpenMetadata',
    `om_entity_type` ENUM('task', 'alert', 'announcement') DEFAULT 'task',

    -- User Engagement
    `user_id` VARCHAR(100) NOT NULL,
    `first_viewed_at` TIMESTAMP NULL DEFAULT NULL,
    `last_viewed_at` TIMESTAMP NULL DEFAULT NULL,
    `view_count` INT DEFAULT 0,
    `clicked_at` TIMESTAMP NULL DEFAULT NULL,
    `dismissed_at` TIMESTAMP NULL DEFAULT NULL,

    -- Channel Information
    `notification_channel` ENUM('web', 'email', 'slack', 'teams') DEFAULT 'web',

    -- Metadata
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    UNIQUE KEY `uk_user_campaign` (`user_id`, `campaign_id`),
    INDEX `idx_campaign_tracking` (`campaign_id`),
    INDEX `idx_om_entity` (`om_entity_id`),
    INDEX `idx_user` (`user_id`),
    CONSTRAINT `fk_campaign_tracking` FOREIGN KEY (`campaign_id`)
        REFERENCES `opportunity_campaigns`(`campaign_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- ============================================
-- 5. COST TRACKING - Measure actual savings
-- ============================================
CREATE TABLE IF NOT EXISTS `cost_tracking` (
    `tracking_id` BIGINT AUTO_INCREMENT PRIMARY KEY,

    -- Entity Reference
    `fqn` VARCHAR(500) NOT NULL,
    `decision_id` BIGINT DEFAULT NULL,
    `campaign_id` BIGINT DEFAULT NULL,

    -- Measurement Period
    `measurement_date` DATE NOT NULL,
    `measurement_type` ENUM('DAILY', 'WEEKLY', 'MONTHLY') DEFAULT 'DAILY',

    -- Cost Measurements
    `baseline_cost` DECIMAL(12,2) DEFAULT 0 COMMENT 'Cost before action',
    `current_cost` DECIMAL(12,2) DEFAULT 0 COMMENT 'Current cost (0 if deleted)',

    -- For MySQL 5.7+: GENERATED columns supported
    `realized_savings` DECIMAL(12,2) GENERATED ALWAYS AS (baseline_cost - current_cost) STORED,

    -- Metadata
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    UNIQUE KEY `uk_fqn_date` (`fqn`(255), `measurement_date`), -- MySQL key length limit
    INDEX `idx_decision_tracking` (`decision_id`),
    INDEX `idx_campaign_tracking` (`campaign_id`),
    INDEX `idx_measurement_date` (`measurement_date`),
    CONSTRAINT `fk_decision_tracking` FOREIGN KEY (`decision_id`)
        REFERENCES `entity_decisions`(`decision_id`) ON DELETE CASCADE,
    CONSTRAINT `fk_campaign_cost` FOREIGN KEY (`campaign_id`)
        REFERENCES `opportunity_campaigns`(`campaign_id`) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- ============================================
-- 6. DETECTION RULES - Configuration for finding issues
-- ============================================
CREATE TABLE IF NOT EXISTS `detection_rules` (
    `rule_id` VARCHAR(50) PRIMARY KEY,
    `rule_name` VARCHAR(200) NOT NULL,
    `rule_category` ENUM('COST', 'USAGE', 'COMPLIANCE', 'PERFORMANCE') DEFAULT 'COST',
    `resource_type` VARCHAR(50) NOT NULL COMMENT 'TABLE, WAREHOUSE, DATABASE',

    -- Rule Logic
    `rule_sql` TEXT COMMENT 'SQL query to detect issues',
    `threshold_config` JSON DEFAULT NULL COMMENT '{"days_inactive": 30, "min_cost": 100}',

    -- Grouping Configuration
    `enable_grouping` BOOLEAN DEFAULT TRUE,
    `grouping_strategy` ENUM('BY_SCHEMA', 'BY_PATTERN', 'BY_OWNER', 'BY_AGE') DEFAULT NULL,
    `min_items_to_group` INT DEFAULT 5,
    `max_items_per_group` INT DEFAULT 100,

    -- OpenMetadata Configuration
    `om_alert_config` JSON DEFAULT NULL,
    `om_webhook_id` VARCHAR(36) DEFAULT NULL,

    -- Scheduling
    `is_active` BOOLEAN DEFAULT TRUE,
    `run_frequency` ENUM('DAILY', 'WEEKLY', 'MONTHLY') DEFAULT 'DAILY',
    `last_run_at` TIMESTAMP NULL DEFAULT NULL,
    `next_run_at` TIMESTAMP NULL DEFAULT NULL,

    -- Metadata
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    INDEX `idx_active_rules` (`is_active`, `next_run_at`),
    INDEX `idx_resource_type` (`resource_type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


-- Main cost basis table
CREATE TABLE IF NOT EXISTS `cost_basis_config` (
    `cost_basis_id` BIGINT AUTO_INCREMENT PRIMARY KEY,

    -- Service and Resource Identification
    `service` VARCHAR(50) NOT NULL COMMENT 'SNOWFLAKE, DATABRICKS, BIGQUERY, REDSHIFT',
    `resource_type` VARCHAR(50) NOT NULL COMMENT 'STORAGE, COMPUTE, TRANSFER, SERVERLESS',

    -- Pricing Information
    `cost_metric` VARCHAR(50) NOT NULL COMMENT 'PER_TB_MONTH, PER_CREDIT, PER_HOUR, PER_GB_TRANSFERRED',
    `unit_cost` DECIMAL(15,6) NOT NULL COMMENT 'Base cost per unit',
    `currency` VARCHAR(3) DEFAULT 'USD',

    -- Pricing Tiers (for volume discounts)
    `tier_name` VARCHAR(50) DEFAULT 'STANDARD' COMMENT 'STANDARD, DISCOUNTED, ENTERPRISE, COMMITTED',
    `min_units` DECIMAL(15,2) DEFAULT 0 COMMENT 'Minimum units for this tier',
    `max_units` DECIMAL(15,2) DEFAULT NULL COMMENT 'Maximum units for this tier (NULL = unlimited)',
    `discount_percentage` DECIMAL(5,2) DEFAULT 0 COMMENT 'Discount % from base price',

    -- Contract/Commitment Details
    `contract_type` VARCHAR(50) DEFAULT 'ON_DEMAND' COMMENT 'ON_DEMAND, RESERVED, COMMITTED_USE',
    `commitment_term_months` INT DEFAULT NULL COMMENT 'Contract term length',

    -- Validity Period
    `effective_start_date` DATE NOT NULL COMMENT 'When this pricing becomes effective',
    `effective_end_date` DATE DEFAULT NULL COMMENT 'When this pricing expires (NULL = current)',
    `is_current` BOOLEAN DEFAULT TRUE COMMENT 'Whether this pricing is currently active',

    -- Metadata
    `source` VARCHAR(100) DEFAULT 'MANUAL' COMMENT 'MANUAL, API, CONTRACT',
    `notes` TEXT DEFAULT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `created_by` VARCHAR(100) DEFAULT 'system',
    `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_by` VARCHAR(100) DEFAULT NULL,

    -- Indexes for performance
    UNIQUE KEY `uk_current_pricing` (`service`, `resource_type`, `tier_name`, `effective_start_date`),
    INDEX `idx_service_resource` (`service`, `resource_type`),
    INDEX `idx_effective_dates` (`effective_start_date`, `effective_end_date`),
    INDEX `idx_is_current` (`is_current`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Master table for all cost basis calculations';


--

SET SESSION sql_mode = '';
-- Other system properties

CREATE USER 'thirdeye_user'@'%' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON thirdeye.* TO 'thirdeye_user'@'%';


GRANT SELECT, INSERT, UPDATE ON openmetadata_db.dbservice_entity TO 'thirdeye_user'@'%';

FLUSH PRIVILEGES;
-- Check current setting
SHOW GLOBAL VARIABLES LIKE 'local_infile';

-- Enable local_infile on server
SET GLOBAL local_infile = 'ON';



--

-- Load Data from local connect. Use either root or password or other utilities

LOAD DATA LOCAL INFILE '{csv_file}'
INTO TABLE fact_datalake_table_usage_inventory
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\\n'
IGNORE 1 ROWS
(DATABASE_NAME, DB_SCHEMA, TABLE_NAME, TABLE_TYPE, ROLL_30D_TBL_UC,
ROLL_30D_SCHEMA_UC, ROLL_30D_DB_UC, ROLL_30D_TBL_QC, CREATE_DATE,
LAST_ACCESSED_DATE, LAST_REFRESHED_DATE, SIZE_GB, RUN_DATE, START_DATE,
END_DATE, ROLL_30D_START_DATE, SERVICE, CREATED_BY);


--