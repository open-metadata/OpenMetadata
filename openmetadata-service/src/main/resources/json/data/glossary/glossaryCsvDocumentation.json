{
  "summary": "Glossary CSV file is used for importing and exporting glossary terms from and to an **existing** glossary.",
  "headers": [
    {
      "name": "parent",
      "required": false,
      "description": "Fully qualified name of the parent glossary term. If the glossary term being created is at the root of the glossary without any parent term, leave this as empty.",
      "examples": [
        "`\"\"` or empty, if the term is at the root of the glossary.",
        "`Business terms.Customer` as parent to create a term `CustomerId` under it."
      ]
    },
    {
      "name": "name",
      "required": true,
      "description": "The name of the glossary term being created.",
      "examples": [
        "`CustomerId`, `Customer name`"
      ]
    },
    {
      "name": "displayName",
      "required": false,
      "description": "Display name for the term.",
      "examples": [
        "`Customer Identifier`, `Customer name`"
      ]
    },
    {
      "name": "description",
      "required": false,
      "description": "Description for the glossary term in Markdown format.",
      "examples": [
        "`Customer Identifier` as defined by the **Legal Team**."
      ]
    },
    {
      "name": "synonyms",
      "required": false,
      "description": "Synonyms for the glossary term",
      "examples": [
        "`Customer Identifier`, `cid`, `customer_id`"
      ]
    },
    {
      "name": "relatedTerms",
      "required": false,
      "description": "List of related glossary term **fully qualified names** separated by `;`.",
      "examples": [
        "`Business terms.Client Identifier`, `Support.Subscriber Id`"
      ]
    },
    {
      "name": "references",
      "required": false,
      "description": "External glossary references for the glossary term in the format `name;URL endPoint`.",
      "examples": [
        "`customer;http://domain.com/glossaries/customer`",
        "`term1;http://domain.com/glossaries/term1;term2;http://domain.com/glossaries/term2`"
      ]
    },
    {
      "name": "tags",
      "required": false,
      "description": "Fully qualified classification tag names associated with the glossary term separated by ';'.. These tags are automatically applied along with the glossary term, when it is used to label an entity.",
      "examples": [
        "`PII.Sensitive`",
        "`PII.Sensitive;PersonalData.Personal`"
      ]
    },
    {
      "name": "reviewers",
      "required": false,
      "description": "User names separated by ';'.",
      "examples": [
        "`john;adam`"
      ]
    },
    {
      "name": "owner",
      "required": false,
      "description": "Owner names separated by ';'. For team owner, include prefix team. For user owner, include prefix user.",
      "examples": [
        "`team;marketing`",
        "`user;john`"
      ]
    },
    {
      "name": "glossaryStatus",
      "required": false,
      "description": "Status of the glossary term. Allowed values `Draft`, `Approved`, or `Deprecated`",
      "examples": [
        "`Draft`",
        "`Approved`",
        "`Deprecated`"
      ]
    },
    {
      "name": "extension",
      "required": false,
      "description": "Custom property values added to the glossary term. Each field value (property and its value) is separated by `;` and internal values can be separated by `|`. For `entityReferenceList` type property, pass `type1:fqn1|type2:fqn2`. For single `entityReference` type property, pass `type:fqn`. Similarly, for `enumMultiSelect`, pass values separated by `|`, and for `enumSingleSelect`, pass a single value along with the property name. For `timeInterval` property type, pass the `startTime:endTime` to the property name. If the field value itself contains delimiter values like `,` and `;` or newline they need to be quoted, and the quotation needs to be further escaped. In general, if passing multiple field values separated by `;`, the extension column value needs to be quoted.",
      "examples": [
        "`customAttribute1:value1;customAttribute2:value2`",
        "`\"dateCp:18-09-2024;dateTimeCp:18-09-2024 01:09:34;durationCp:PT5H30M10S;emailCp:admin@open-metadata.org\"`",
        "`entRefListCp:searchIndex:elasticsearch_sample.table_search_index|databaseSchema:Glue.default.information_schema|databaseSchema:sample_data.ecommerce_db.shopify|database:Glue.default|`",
        "`\"entRefCp:user:\"\"aaron.singh2\"\"\"`",
        "`\"enumMultiSelectCp:val3|val2|val1|val4|val5;enumSingleSelectCp:singleVal1\"`",
        "`\"timeCp:10:08:45;timeIntervalCp:1726142300000:17261420000;timeStampCp:1726142400000\"`",
        "`\"integerCp:7777;numberCp:123456\"`",
        "`\"\"\"queryCp:select col,row from table where id ='30';\"\";stringcp:sample string content\"`",
        "`markdownCp:# Sample Markdown Text`",
        "\"\"\"tableCp:row_1_col1_Value,row_1_col2_Value,row_1_col3_Value\"\"\""
      ]
    }
  ]
}