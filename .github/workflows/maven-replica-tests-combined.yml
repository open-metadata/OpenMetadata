#  Copyright 2021 Collate
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#  http://www.apache.org/licenses/LICENSE-2.0
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

name: Maven Read/Write Replica Tests Combined CI

on:
  workflow_dispatch:
  schedule:
    # Run weekly on Sundays at 2 AM UTC for comprehensive testing
    - cron: '0 2 * * 0'
  push:
    branches:
      - main
    paths:
      - "openmetadata-service/src/main/java/org/openmetadata/service/jdbi3/**"
      - "openmetadata-service/src/main/java/org/openmetadata/service/config/ReadReplicaConfiguration.java"
      - "openmetadata-service/src/main/java/org/openmetadata/service/OpenMetadataApplicationConfig.java"
      - "openmetadata-service/src/main/java/org/openmetadata/service/OpenMetadataApplication.java"
      - "openmetadata-service/src/test/java/**/ReadReplica*Test.java"
      - "openmetadata-service/pom.xml"
  pull_request_target:
    types: [labeled, opened, synchronize, reopened, ready_for_review]
    paths:
      - "openmetadata-service/src/main/java/org/openmetadata/service/jdbi3/**"
      - "openmetadata-service/src/main/java/org/openmetadata/service/config/ReadReplicaConfiguration.java"
      - "openmetadata-service/src/main/java/org/openmetadata/service/OpenMetadataApplicationConfig.java"
      - "openmetadata-service/src/main/java/org/openmetadata/service/OpenMetadataApplication.java"
      - "openmetadata-service/src/test/java/**/ReadReplica*Test.java"
      - "openmetadata-service/pom.xml"

permissions:
  contents: read
  checks: write

concurrency: 
  group: maven-build-replica-combined-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  replica-tests:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    strategy:
      fail-fast: false
      matrix:
        database: 
          - name: "MySQL"
            profile: "mysql-replica-tests"
            container: "mysql:8.3.0"
          - name: "PostgreSQL" 
            profile: "postgres-replica-tests"
            container: "postgres:15"
    
    name: ${{ matrix.database.name }} Replica Tests
    
    steps:
      - name: Wait for the labeler
        uses: lewagon/wait-on-check-action@v1.3.4
        if: ${{ github.event_name == 'pull_request_target' }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: Team Label
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 90

      - name: Verify PR labels
        uses: jesusvasquez333/verify-pr-label-action@v1.4.0
        if: ${{ github.event_name == 'pull_request_target' }}
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          valid-labels: 'safe to test'
          pull-request-number: '${{ github.event.pull_request.number }}'
          disable-reviews: true  # To not auto approve changes

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache Maven dependencies
        id: cache-output
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
 
      - name: Set up JDK 21
        if: steps.cache-output.outputs.exit-code == 0
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install Ubuntu dependencies
        if: steps.cache-output.outputs.exit-code == 0
        run: |
          sudo apt-get update
          sudo apt-get install -y unixodbc-dev python3-venv librdkafka-dev gcc libsasl2-dev build-essential libssl-dev libffi-dev \
          librdkafka-dev unixodbc-dev libevent-dev jq
          sudo make install_antlr_cli

      - name: Build with Maven - ${{ matrix.database.name }} Replica Tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Running ${{ matrix.database.name }} replica tests with profile: ${{ matrix.database.profile }}"
          echo "Using containers: Primary=${{ matrix.database.container }}, Replica=${{ matrix.database.container }}"
          mvn -P${{ matrix.database.profile }} clean package -am -DforkCount=1 -DreuseForks=false

      - name: Clean Up
        if: always()
        run: |
          cd ./docker/development
          docker compose down --remove-orphans
          sudo rm -rf ${PWD}/docker-volume
          # Clean up any dangling containers from testcontainers
          docker container prune -f
          docker volume prune -f

      - name: Publish Test Report - ${{ matrix.database.name }}
        if: ${{ always() }}
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true
          report_paths: 'openmetadata-service/target/surefire-reports/TEST-*.xml'
          check_name: ${{ matrix.database.name }} Replica Test Results

  # Summary job to provide overall status
  replica-tests-summary:
    runs-on: ubuntu-latest
    needs: replica-tests
    if: always()
    steps:
      - name: Check Replica Tests Results
        run: |
          if [[ "${{ needs.replica-tests.result }}" == "success" ]]; then
            echo "✅ All replica tests passed successfully!"
            echo "Both MySQL and PostgreSQL replica infrastructure tests completed successfully."
            echo "Read/write database replica separation is working correctly."
          else
            echo "❌ Some replica tests failed!"
            echo "Check the individual test results above for details."
            exit 1
          fi